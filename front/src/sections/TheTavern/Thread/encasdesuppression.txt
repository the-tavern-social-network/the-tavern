Post.module.scss

// @import '../../../../../assets/scss/variables'

.Container {
    position: relative;
}

.AbsoluteAuthor{
    position: absolute;
    top: -0.3rem;
    right: 0.6rem;
}


.Post {
    background-color:#3A271D;
    display: flex;
    flex-direction: column;
    margin:0 auto;
    width: 90%;
    
}

.Gutter {
    width: 90%;
    border-radius: 15%;
    background-color: #3A271D;
    height: 0.3rem;
    margin: 1rem auto 0.15rem;
}

.AbsoluteAddContact{
    position: absolute;
    top:-0.3rem;
    right: -0.2rem;
    padding: 0.1rem;
    background-color: #1DFFD6;
    width: 1rem;
    border-radius: 20%;
}

.AddButton {
    color: #fff;
    font-weight: 900;
    display: block;
    margin: auto;
    font-size: 0.8rem;
}

.AuthorAvatar{
    background-color: #fff;
    border-radius: 50%;
    width: 2rem;
    top: -0.5rem;
    right: -0.5rem;
}

.AuthorPost {

    color: #fff;
    
    text-align: right;
    margin-right: 0.5rem;
    font-family: 'nunito sans', nunito;
    padding:0.3rem 1rem 0.3rem 0.3rem; 


    &_gold{
        color: #fff200;
        text-align: right;
        font-family: 'nunito sans', nunito;
        margin-right: 0.5rem;
        padding:0.3rem 1rem 0.3rem 0.3rem; 

    }
    

}



.ContentPost {

    background-color: #0B0501;
    border-radius: 5px;
    color: #fff;
    width: 95%;
    height: fit-content;
    margin: 0 auto;
    padding: 1rem;
    font-family: 'nunito sans', nunito;
    word-wrap: break-word;
    
    
    
}

.PostFooter{

    &_start{
        color: #fff;
        padding: 0.4rem;
        font-size: 0.8em;
        display: flex;
        justify-content:flex-start;
        border: 1px solid rgba(242, 173, 0, 0.603);
        width:95%;
        margin: 0.3rem auto;
    }

    &_between{
        color: #fff;
        padding: 0.4rem;
        font-size: 0.8em;
        display: flex;
        justify-content:space-between;
        border: 1px solid rgba(242, 173, 0, 0.603);
        width:95%;
        margin: 0.3rem auto;
    }
}

.fa-trash{
    color: red;
}

.DeleteButton{
    font-size: 1.1em;
}

.DateContainer{
    display: flex;
    justify-content: space-between;
    width: 35%;
    // padding: 0 0.rem;
}


Thread.module.scss

.Thread {
    background-color: #0B0501;
    height:100%;
}

.Drawer{
    background-color: #553719;
    position: fixed;
    bottom: 0px;
    left: 2.5%;
    width: 95%;
    display: flex;
    justify-content: space-between;
    
}

.SelfAvatar{
    width: 7%;
    margin: 0.3rem 1rem;
}

.Triangle{
    // display : inline-block;
    margin: 0.7rem 2rem;
    height : 0;
    width : 0;
    border-right : 0.7rem solid transparent;
    border-bottom : 1.25rem solid #fff200;
    border-left : 0.7rem solid transparent;
}


Post.js 

import React from 'react';

import Moment from 'react-moment';

import PropTypes from 'prop-types';

import cross from '../../../../../assets/images/logocroix.svg';

import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";

import { faTrash, faPlus } from "@fortawesome/free-solid-svg-icons";

import styles from './Post.module.scss';



const Post = ({ title, content, author, image, color, deletePost, loggedUser, id, createdAt }) => {

  return (

    <div className={styles.Container}>

      <div className={styles.Gutter}></div>

      <div className={styles.Post}>

        { author.username === loggedUser ? <div className={styles.AuthorPost_gold}>{author.username}</div> : <div className={styles.AuthorPost}>{author.username}</div>}

        <div className={styles.AbsoluteAuthor}>

          <img className={styles.AuthorAvatar} src={cross} alt=""/>

          { author.username !== loggedUser && <div className={styles.AbsoluteAddContact}>

              <FontAwesomeIcon icon={faPlus} className={styles.AddButton} /> 

            </div> }

        </div>

        <p className={styles.ContentPost}>{content}</p>

        <div className={ author.username !== loggedUser ? styles.PostFooter_start : styles.PostFooter_between}>

          <div className={styles.DateContainer}>

            <div className={styles.Day}>

              <Moment add={{ hours: 2 }} format="DD/MM/YY">{createdAt}</Moment>

            </div>

            <div className={styles.Hour}>

              <Moment add={{ hours: 2 }} format="HH" >{createdAt}</Moment>

              <span>h</span>

              <Moment format="mm">{createdAt}</Moment>

            </div>

          </div>

            { author.username === loggedUser && <FontAwesomeIcon color="red" icon={faTrash} className={styles.DeleteButton} onClick={() => deletePost(id)} /> }

        </div>

      </div>

    </div>



  );

}

  



Post.propTypes = {

  author:  PropTypes.shape({

    username: PropTypes.string.isRequired,

  }).isRequired,

  content: PropTypes.string.isRequired,

  image: PropTypes.string,

  color: PropTypes.string.isRequired,

  deletePost : PropTypes.func.isRequired,

  loggedUser : PropTypes.string.isRequired,

  id: PropTypes.number.isRequired,

};



Post.defaultProps = {

  image: '',

  color: '#fff',

};



export default Post;


Thread.js

import React from 'react';

import styles from './Thread.module.scss';



import cross from '../../../assets/images/logocroix.svg';

import Posts from '../../../containers/TheTavern/Thread/Posts';

import PostForm from '../../../containers/TheTavern/Thread/PostForm';



const Thread = () => {

  return (

    <div className={styles.Thread}>

      

      <PostForm />

      <Posts />

      <div className={styles.Drawer}>

        <img className={styles.SelfAvatar} src={cross} alt=""/>

        <div className={styles.Triangle}></div>

      </div>

    </div>

  );

};



export default Thread;

