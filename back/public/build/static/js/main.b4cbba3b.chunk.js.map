{"version":3,"sources":["sections/Auth/Signup/Signup.module.scss","sections/TheTavern/UserAccount/UserAccount.module.scss","sections/TheTavern/Thread/Posts/Post/Post.module.scss","sections/TheTavern/Thread/PostForm/PostForm.module.scss","sections/Auth/Signin/Signin.module.scss","sections/TheTavern/Thread/Invitation/Invitation.module.scss","sections/TheTavern/Tavern/Chat/Chat.module.scss","sections/Auth/Home/Presentation/Presentation.module.scss","sections/TheTavern/Tavern/ContactList/ContactList.module.scss","sections/TheTavern/components/Nav/Nav.module.scss","components/Layout/Layout.module.scss","sections/TheTavern/Tavern/ScreenShare/ScreenShare.module.scss","sections/TheTavern/Tavern/ConnectedContactsList/ConnectedContactsList.module.scss","sections/TheTavern/UserAccount/AvatarsList/AvatarsList.module.scss","assets/images/logo1.svg","assets/images/boutoncroix.svg","assets/images/Avatardefault.png","sections/TheTavern/components/Nav/NavLinks/NavLinks.module.scss","sections/TheTavern/UserAccount/Contact/Contact.module.scss","sections/TheTavern/Tavern/DiceRoller/DiceRoller.module.scss","sections/TheTavern/Tavern/Tavern.module.scss","assets/images/avatar/Avatardefault.png","assets/images/d20.svg","sections/Auth/Home/Home.module.scss","sections/TheTavern/UserAccount/AvatarsList/AvatarItem/AvatarItem.module.scss","components/Modal/Modal.module.scss","sections/TheTavern/Thread/Search/Search.module.scss","sections/TheTavern/Thread/Thread.module.scss","assets/video/backgroundvideo.mp4","assets/images/logocroix.svg","sections/TheTavern/Thread/Invitation/InvitationHeader/InvitationHeader.module.scss","assets/images/turn-off.svg","components/Video/Video.module.scss","assets/images/shield.svg","components/Error/ErrorMessage.module.scss","assets/images/scroll.svg","sections/TheTavern/Tavern/DiceRoller/Dice/Dice.module.scss","assets/images/dices/d4.svg","assets/images/dices/d6.svg","assets/images/dices/d8.svg","assets/images/dices/d10.svg","assets/images/dices/d12.svg","assets/images/dices/d20.svg","sections/TheTavern/Tavern/DiceRoller/Multiplier/Multiplier.module.scss","sections/TheTavern/Tavern/DiceRoller/Result/Result.module.scss","assets/images/door.svg","assets/images/addplayer.svg","components/Backdrop/Backdrop.module.scss","assets/images/goblin.gif","sections/TheTavern/UserAccount/Titles/Title/Title.module.scss","sections/TheTavern/UserAccount/Titles/Titles.module.scss","assets/images/avatar/dwarf_female_bg.png","assets/images/avatar/Dwarf_male_bg.png","assets/images/avatar/elf_female_bg.png","assets/images/avatar/elf_male_bg.png","assets/images/avatar/gnome_female_bg.png","assets/images/avatar/gnome_male_bg.png","assets/images/avatar/halfelf_female_bg.png","assets/images/avatar/halfelf_male_bg.png","assets/images/avatar/human_female_bg.png","assets/images/avatar/human_male_bg.png","assets/images/avatar/lizardmen_female_bg.png","assets/images/avatar/lizardmen_male_bg.png","assets/images/avatar/orc_female_bg.png","assets/images/avatar/orc_male_bg.png","assets/images/avatar/ratmen_female_bg.png","assets/images/avatar/Ratmen_male_bg.png","assets/images/feather.svg","assets/images/team.svg","assets/images/skull.svg","assets/images/fire.svg","assets/images/404.png","components/NotFound/NotFound.module.scss","middlewares/socket.js","actions/tavern.js","actions/auth.js","actions/post.js","actions/user.js","actions/index.js","reducers/tavern.js","util/index.js","reducers/auth.js","reducers/user.js","reducers/post.js","reducers/global.js","reducers/index.js","store/index.js","middlewares/auth.js","middlewares/post.js","middlewares/user.js","middlewares/tavern.js","actions/socket.js","hoc/ProtectedRoute.js","containers/ProtectedRoute.js","sections/TheTavern/components/Nav/NavLinks/NavLinks.js","components/Sword/Sword.js","sections/TheTavern/components/Nav/Nav.js","containers/TheTavern/components/Nav.js","components/Video/Video.js","components/Layout/Layout.js","sections/Auth/Home/Presentation/Presentation.js","sections/Auth/Home/Home.js","components/Field/Field.js","containers/components/Field.js","components/Error/ErrorMessage.js","sections/Auth/Signin/Signin.js","containers/Auth/Signin.js","sections/Auth/Signup/Signup.js","containers/Auth/Signup.js","sections/Auth/Auth.js","sections/TheTavern/Tavern/ContactList/ContactListItem/ContactListItem.js","sections/TheTavern/Tavern/ContactList/ContactList.js","sections/TheTavern/Tavern/DiceRoller/Dice/Dice.js","sections/TheTavern/Tavern/DiceRoller/Multiplier/Multiplier.js","sections/TheTavern/Tavern/DiceRoller/DiceRoller.js","sections/TheTavern/Tavern/ScreenShare/ScreenShare.js","util/rtc.js","sections/TheTavern/Tavern/Chat/Chat.js","containers/TheTavern/Tavern/Chat.js","sections/TheTavern/Tavern/ConnectedContactsList/ConnectedContactsList.js","sections/TheTavern/Tavern/Tavern.js","containers/TheTavern/Tavern/Tavern.js","sections/TheTavern/UserAccount/AvatarsList/AvatarItem/AvatarItem.js","components/Backdrop/Backdrop.js","sections/TheTavern/UserAccount/AvatarsList/AvatarsList.js","containers/TheTavern/UserAccount/AvatarsList/AvatarsList.js","components/Modal/Modal.js","sections/TheTavern/UserAccount/Contact/Contact.js","sections/TheTavern/UserAccount/Titles/Title/Title.js","sections/TheTavern/UserAccount/Titles/Titles.js","containers/TheTavern/UserAccount/Titles/Titles.js","util/avatar.js","sections/TheTavern/UserAccount/UserAccount.js","containers/TheTavern/UserAccount/UserAccount.js","components/Welcome/Welcome.js","containers/components/Welcome.js","sections/TheTavern/Thread/Posts/Post/Post.js","sections/TheTavern/Thread/Posts/Posts.js","containers/TheTavern/Thread/Posts.js","sections/TheTavern/Thread/Invitation/InvitationHeader/InvitationHeader.js","sections/TheTavern/Thread/Invitation/Invitation.js","sections/TheTavern/Thread/Search/Search.js","sections/TheTavern/Thread/PostForm/PostForm.js","containers/TheTavern/Thread/PostForm.js","sections/TheTavern/Thread/Thread.js","components/NotFound/NotFound.js","sections/TheTavern/TheTavern.js","containers/TheTavern/TheTavern.js","App/App.js","containers/App/App.js","index.js"],"names":["module","exports","socketCanal","addChatMessage","message","type","deleteTavern","tavernId","gamemaster","participant","connect","response","savePosts","posts","deleteContact","contactId","resetFields","reducer","setError","errorMessage","errorType","data","INITIAL_STATE","connectedContacts","messages","isInitiator","apiUrl","defaultTitles","sort","getDate","year","Date","getFullYear","month","getMonth","day","getDay","email","username","password","confirmPassword","birthdate","loggedUser","hasTriedToAuthenticate","avatar","avatardefault","isEditing","description","list","post","isResolve","isInitialLoading","isLoading","hasError","uuidv4","combineReducers","global","state","action","tavern","requester","find","connectedContact","id","contactIndex","contacts","findIndex","contact","splice","filter","concat","tavernRequests","tavernRequest","tavern_id","user","connectionUserId","userId","reducerName","name","value","auth","isLoggedIn","title","sent","pendingRequests","map","updatedContact","received","participantId","date","isGamemaster","enhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","next","a","getState","axios","dispatch","console","log","loginData","withCredentials","delete","trace","get","postData","content","user_id","contact_id","patch","userData","updatedUser","avatarPath","gamemaster_id","participant_id","io","on","msg","addPost","removePost","contactInfos","addContactRequest","addContact","contactUpdate","removeContact","tavernInvite","deleteTavernInvite","removeAllListeners","createStore","rootReducer","ProtectedRoute","Component","component","rest","render","props","to","defaultProps","NavLinks","logout","isOpen","setIsOpen","className","styles","NavLinks__Open","join","onClick","exact","NavLinks__Deconnexion","src","deconnetion","alt","NavLinks__Deconnexion__Title","Sword","Nav","useState","Nav__Header","Nav__Header__Welcome","Nav__Header__Welcome__User","Nav__Header__Welcome__Title","Nav__Logo","logo","Nav__Menu__Container","Nav__Menu__Open","Nav__Menu","Video","loop","autoPlay","video","Layout","layout","section","children","Auth","Auth__Logo","Auth__Main","Auth__Footer","Main","Main__Main","Main__Footer","Presentation","Mobile","Desktop","Desktop__Title","CrossSwordDesktop","crossSword","Desktop__SubTitle","Desktop__AmbientText","Desktop__PresentationText","Desktop__TavernierText","Signature","CrossSword","Home","history","match","useEffect","document","push","path","Connexion__Container","Connexion","Arrow","Field","field","placeholder","inputChange","cssClass","unsetError","inputChangeHandler","event","target","maxLength","onChange","min","max","ownProps","ErrorMessage","Signin","login","matchMedia","matches","onSubmit","preventDefault","Signin__CrossSword","CrossButton","Signin__Container","htmlFor","Signin__Email","Signin__Field","Signin__Error","Password","Password__Forgotten","Signin__Password","Signin__Btn__Container","Signin__Signup","Signin__Btn","Signin__Btn__Shield","Shield","Signup","signup","resolve","signupFormHandler","EmailValidator","length","hasUpperCase","test","hasLowerCase","hasNumbers","hasNonalphas","Signup__CrossSword","Signup__Container","Signup__Field","Signup__Email","Signup__HasError","Signup__Username","Signup__Birthdate","Signup__Password","Signup__ConfirmPassword","Signup__Btn","Signup__Btn__Scroll","Scroll","ContactListItem","inviteIntoTavern","connection","isInvitable","isInvited","extra","ContactList__List__Item","key","ContactList__List__Item__Avatar","ContactList__List__Item__Content","disabled","ContactList__List__Item__Btn__Invited","ContactList__List__Item__Btn","params","ContactList","userContacts","AddPlayerContainer","AddPalyerContainer__ContactList","ContactList__List","Dice","diceImg","update","d4","d6","d8","d10","d12","d20","Multiplier","pattern","DiceRoller","setDicesValue","setRolledDices","multiplier","setMultiplier","dices","calculateTotal","multiplierNumber","newResult","i","Math","floor","random","send","DiceRoller__Multiplier__Container","DiceRoller__Multiplier","DiceRoller__Dice__Container","dice","Screen","resetChat","clearConnectedContactsList","contactListOpen","setContactListOpen","areDicesShown","setAreDicesShown","videoStream","useRef","videoStreamContainer","socketURL","videosContainer","socketMessageEvent","session","screen","audio","language","maxParticipantsAllowed","iceServers","urls","channel","autoCloseEntireSession","onstream","stream","mute","mediaElement","nodeName","style","width","height","current","append","rtcConfig","onMediaError","error","closeSocket","ScreenContainer","ref","ScreenContainer__Logo","ScreenContainer__Icons","ScreenContainer__Icons__D20","ScreenContainer__Icons__AddPlayer","addplayer","door","ScreenContainer__Icons__Exit","forEach","replace","Chat","messagesContainer","container","scrollTop","scrollHeight","onmessage","checkInitiator","Chat__Messages","Chat__Messages__Message","Chat__Messages__Message__Player","Chat__Messages__Message__Content","Chat__Messages__Message__Gamemaster__Self","Chat__Messages__Message__Gamemaster","Chat__Messages__Message__Self","Chat__Messages__DiceRoll","Chat__Message__Form","onKeyUp","keyCode","shiftKey","Chat__Message__Input","Chat__Message__Form__Btn","ConnectedContactsList","ConnectedContactsList__List","ConnectedContactsList__List__Item","ConnectedContactsList__List__Avatar","Tavern","setTavernId","tavernContactConnect","tavernContactDisconnect","inviteContact","openTavern","RTCMultiConnection","userHasJoined","setUserHasJoined","rolledDices","dicesValue","checkPresence","isRoomExist","roomid","dontCaptureUserMedia","open","onopen","userToConnect","userid","onclose","onstreamended","getAllParticipants","pid","disconnectWith","attachStreams","stop","ScreenShare","Tavern__Chat__Container","ContactListMoreSelf","Tavern__Avatar","AvatarItem","avatarImage","updateAvatar","submit","avatarCase","radio","checked","readOnly","Highlighted","onDoubleClick","Backdrop","clicked","classes","AvatarsList","modalCancel","avatarImages","updateImage","handleSubmit","Modal","Header","Modal__Closebtn","cross","AvatarLists","AvatarLists__Container","AvatarLists__Valider","header","modalConfirm","Modal__goblin","goblin","Buttons__Container","Contact","isModalOpen","setIsModalOpen","Contact_Content_Container","Contact_Image","Contact_Content","Contact_Title","Contact_Btn","Title","React","forwardRef","selectTitle","Titles","show","updateTitle","listItems","clickHandler","clickAway","item","includes","textContent","addEventListener","removeEventListener","TitleList","dwarfFem","dwarfMale","elfFem","elfMale","gnomeFem","gnomeMale","halfelfFem","halfelfMale","humanFem","humanMale","lizardmenFem","lizardmenMale","orcFem","orcMale","ratmenFem","ratmenMale","UserAccount","setIsEditing","editUserAccount","deleteAcount","isModalVisible","setModalIsVisible","isModalAvatar","setModalAvatar","isTitlesShowed","setIsTitlesShowed","Username_Container","UserAccount__DeleteBtn","Username","TitleContainer","TitleContainer__Title","UserAccount__Avatar","AvatarDefault","cursor","UserAccount__Description_Editing_Form","UserAccount__Description_Editing","UserAccount__Description_Editing_Btn","UserAccount__Description__Bloc","UserAccount__Description","UserAccount__Description_Text","UserAccount__Description_Btn","UserAccount__Description_Btn__Feather","Feather","ContactList_Title","ContactList_Title_Logo","Friends","ContactList__Bloc","avatars","Welcome","Post","deletePost","sendContactRequest","isDeleteModalOpen","setIsDeleteModalOpen","clickedHeart","setClickedHeart","sentRequest","author","receivedRequest","alreadyContacts","Container","Gutter","AuthorPost_gold","AuthorPost","AbsoluteAuthor","AuthorAvatar__AlreadyContacts","AuthorAvatar__PendingRequest","AuthorAvatar","AbsoluteAddContact","icon","faPlus","AddButton","ContentPost","PostFooter_start","PostFooter_between","DateContainer","DateContainer__CheckedHeart","DateContainer__Heart","Day","add","hours","format","createdAt","Hour","color","faTrash","DeleteButton","image","Posts","reverse","InvitationHeader","label","number","InvitationHeader__Number","Invitation","invitation","contactRequest","acceptContact","useHistory","Invitation__Tavern","Invitation__Tavern__Container","Invitation__Tavern__Time","Invitation__Tavern__Avatar","Invitation__Tavern__Message__Container","Invitation__Tavern__Username","Invitation__Tavern__Message","Invitation__Tavern__Buttons__Container","Invitation__Tavern__Button__Add","Invitation__Tavern__Button__Decline","skull","Asking","Request","Invitation__Container","Avatar","Name","Buttons","Add","Decline","deleteHandler","obj","Search","Form","Button","Input","PostForm","numberRequests","PostForm__Open","Drawer","PostForm__NumberRequests","SelfAvatar","Triangle__Down","Triangle","PostForm__Main","SendButton","SendButton__Fire","Fire","SelfAvatarInput","PostForm__TavernInvitation","PostForm__TavernInvitation__Container","PostForm__TavernInvitation__None","PostForm__Invitation","PostForm__Footer","isContact","Thread","Thread__Welcome","Thread__PostsContainer","NotFound","notFound","TheTavern","wsConnect","App","isUserLogged","fetchPosts","withRouter","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.b4cbba3b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Signup\":\"Signup_Signup__14KTg\",\"Signup__Container\":\"Signup_Signup__Container__3QRVa\",\"Signup__CrossSword\":\"Signup_Signup__CrossSword__2uL_V\",\"Signup__Field\":\"Signup_Signup__Field__3uHIj\",\"Signup__Btn\":\"Signup_Signup__Btn__275kl\",\"Signup__Btn__Scroll\":\"Signup_Signup__Btn__Scroll__3IrN3\",\"Signup__HasError\":\"Signup_Signup__HasError__36OKJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserAccount\":\"UserAccount_UserAccount__2sBkq\",\"UserAccount__DeleteBtn\":\"UserAccount_UserAccount__DeleteBtn__3ALq6\",\"UserAccount__Description\":\"UserAccount_UserAccount__Description__1Xoc_\",\"UserAccount__Description_Text\":\"UserAccount_UserAccount__Description_Text__1NF-x\",\"UserAccount__Description__Bloc\":\"UserAccount_UserAccount__Description__Bloc__24XaK\",\"UserAccount__Description_Btn\":\"UserAccount_UserAccount__Description_Btn__nbRJu\",\"UserAccount__Description_Btn__Feather\":\"UserAccount_UserAccount__Description_Btn__Feather__27ioc\",\"UserAccount__Description_Editing\":\"UserAccount_UserAccount__Description_Editing__2w6H7\",\"UserAccount__Description_Editing_Form\":\"UserAccount_UserAccount__Description_Editing_Form__1t1aW\",\"UserAccount__Description_Editing_Btn\":\"UserAccount_UserAccount__Description_Editing_Btn__YbSRQ\",\"UserAccount__Avatar\":\"UserAccount_UserAccount__Avatar__2jykK\",\"Username_Container\":\"UserAccount_Username_Container__3ZaGY\",\"Username\":\"UserAccount_Username__2lT-v\",\"ContactList\":\"UserAccount_ContactList__1sXZ-\",\"ContactList__Bloc\":\"UserAccount_ContactList__Bloc__2j2Io\",\"ContactList_Title\":\"UserAccount_ContactList_Title__1d815\",\"ContactList_Title_Logo\":\"UserAccount_ContactList_Title_Logo__1sA6L\",\"TitleContainer\":\"UserAccount_TitleContainer__Vwfjo\",\"TitleContainer__Title\":\"UserAccount_TitleContainer__Title__3Ijnl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Post_Container__1f8Qd\",\"fadeIn\":\"Post_fadeIn__1PXso\",\"AbsoluteAuthor\":\"Post_AbsoluteAuthor__3y8mx\",\"Post\":\"Post_Post__WCzbp\",\"Gutter\":\"Post_Gutter__3Gcf2\",\"AbsoluteAddContact\":\"Post_AbsoluteAddContact__6lM_9\",\"bounceOutContact\":\"Post_bounceOutContact__1MhWQ\",\"AddButton\":\"Post_AddButton__3ECi2\",\"AuthorAvatar\":\"Post_AuthorAvatar__wUboE\",\"AuthorAvatar__PendingRequest\":\"Post_AuthorAvatar__PendingRequest__2VKCr\",\"AuthorAvatar__AlreadyContacts\":\"Post_AuthorAvatar__AlreadyContacts__1CtT-\",\"bounceOut\":\"Post_bounceOut__2A4eF\",\"AuthorPost\":\"Post_AuthorPost__3jL1u\",\"AuthorPost_gold\":\"Post_AuthorPost_gold__32Y6m\",\"ContentPost\":\"Post_ContentPost__1bNs-\",\"DateContainer\":\"Post_DateContainer__1ebL3\",\"DateContainer__Heart\":\"Post_DateContainer__Heart__3Cg5L\",\"DateContainer__CheckedHeart\":\"Post_DateContainer__CheckedHeart__99YBK\",\"PostFooter_start\":\"Post_PostFooter_start__1LrJQ\",\"PostFooter_between\":\"Post_PostFooter_between__in79B\",\"fa-trash\":\"Post_fa-trash__1zGSr\",\"DeleteButton\":\"Post_DeleteButton__2TqRo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostForm\":\"PostForm_PostForm__i9IOo\",\"PostForm__Open\":\"PostForm_PostForm__Open__2lv8H\",\"PostForm__NumberRequests\":\"PostForm_PostForm__NumberRequests__28NaT\",\"PostForm__Main\":\"PostForm_PostForm__Main__2oT1F\",\"PostForm__TavernInvitation\":\"PostForm_PostForm__TavernInvitation__3BI8V\",\"PostForm__TavernInvitation__None\":\"PostForm_PostForm__TavernInvitation__None__YG-yW\",\"PostForm__TavernInvitation__Container\":\"PostForm_PostForm__TavernInvitation__Container__1eOmT\",\"PostForm__Invitation\":\"PostForm_PostForm__Invitation__2mNp2\",\"PostForm__Footer\":\"PostForm_PostForm__Footer__1PWNn\",\"Drawer\":\"PostForm_Drawer__3JQxe\",\"SelfAvatar\":\"PostForm_SelfAvatar__m7lGr\",\"SelfAvatarInput\":\"PostForm_SelfAvatarInput__1hc1a\",\"Smiley\":\"PostForm_Smiley__w38oZ\",\"Triangle\":\"PostForm_Triangle__3JW0k\",\"Triangle__Down\":\"PostForm_Triangle__Down__2kySC\",\"Form\":\"PostForm_Form__JsmgA\",\"Input\":\"PostForm_Input__1zSKk\",\"SendButton\":\"PostForm_SendButton__1N0-Z\",\"SendButton__Fire\":\"PostForm_SendButton__Fire__E7fLD\",\"Gutter\":\"PostForm_Gutter__2xGz8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Signin\":\"Signin_Signin__10I9D\",\"Signin__Signup\":\"Signin_Signin__Signup__2wkiT\",\"Signin__Container\":\"Signin_Signin__Container__2VDCU\",\"Signin__CrossSword\":\"Signin_Signin__CrossSword__tgnym\",\"Signin__Field\":\"Signin_Signin__Field__39ivt\",\"Signin__Btn\":\"Signin_Signin__Btn__3y7tY\",\"Signin__Btn__Shield\":\"Signin_Signin__Btn__Shield__6m2hf\",\"Signin__Btn__Container\":\"Signin_Signin__Btn__Container__3n4_t\",\"Signin__Error\":\"Signin_Signin__Error__2bect\",\"Password\":\"Signin_Password__hKh2S\",\"Password__Forgotten\":\"Signin_Password__Forgotten__2xHes\",\"Presentation\":\"Signin_Presentation__aniso\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Invitation\":\"Invitation_Invitation__1KuFm\",\"Invitation__Container\":\"Invitation_Invitation__Container__3QbPb\",\"Invitation__Tavern\":\"Invitation_Invitation__Tavern__1YC6L\",\"Invitation__Tavern__Avatar\":\"Invitation_Invitation__Tavern__Avatar__1T6v-\",\"Invitation__Tavern__Container\":\"Invitation_Invitation__Tavern__Container__2XXpM\",\"Invitation__Tavern__Time\":\"Invitation_Invitation__Tavern__Time__2wS-o\",\"Invitation__Tavern__Message__Container\":\"Invitation_Invitation__Tavern__Message__Container__P9b_L\",\"Invitation__Tavern__Username\":\"Invitation_Invitation__Tavern__Username__1nX_p\",\"Invitation__Tavern__Buttons__Container\":\"Invitation_Invitation__Tavern__Buttons__Container__3MBq2\",\"Invitation__Tavern__Button__Add\":\"Invitation_Invitation__Tavern__Button__Add__1pS58\",\"Invitation__Tavern__Button__Decline\":\"Invitation_Invitation__Tavern__Button__Decline__3PNpQ\",\"Asking\":\"Invitation_Asking__3lb7w\",\"Request\":\"Invitation_Request__23Uds\",\"Name\":\"Invitation_Name__3he-f\",\"Message\":\"Invitation_Message__jA9UM\",\"Avatar\":\"Invitation_Avatar__2aQyg\",\"Buttons\":\"Invitation_Buttons__3YzO5\",\"Add\":\"Invitation_Add__3APFp\",\"Decline\":\"Invitation_Decline__5A0Kr\",\"Test\":\"Invitation_Test__33pHr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Chat\":\"Chat_Chat__lpdql\",\"Chat__Messages\":\"Chat_Chat__Messages__3D0_3\",\"Chat__Messages__DiceRoll\":\"Chat_Chat__Messages__DiceRoll__dj-iY\",\"Chat__Messages__Message\":\"Chat_Chat__Messages__Message__1GHPw\",\"Chat__Messages__Message__Gamemaster\":\"Chat_Chat__Messages__Message__Gamemaster__oF7j3\",\"Chat__Messages__Message__Gamemaster__Self\":\"Chat_Chat__Messages__Message__Gamemaster__Self__3hUHv\",\"Chat__Messages__Message__Self\":\"Chat_Chat__Messages__Message__Self__2ybjE\",\"Chat__Messages__Message__Player\":\"Chat_Chat__Messages__Message__Player__jnQGm\",\"Chat__Messages__Message__Content\":\"Chat_Chat__Messages__Message__Content__2567A\",\"Chat__Message__Form\":\"Chat_Chat__Message__Form__3_75Q\",\"Chat__Message__Form__Btn\":\"Chat_Chat__Message__Form__Btn__3urKr\",\"Chat__Message__Input\":\"Chat_Chat__Message__Input__1JhCS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Presentation\":\"Presentation_Presentation__2KkE8\",\"Signature\":\"Presentation_Signature__4sx_1\",\"Desktop\":\"Presentation_Desktop__3D6g1\",\"Desktop__Title\":\"Presentation_Desktop__Title__1kLpS\",\"Desktop__SubTitle\":\"Presentation_Desktop__SubTitle__3TcHC\",\"Desktop__AmbientText\":\"Presentation_Desktop__AmbientText__UVGa4\",\"Desktop__PresentationText\":\"Presentation_Desktop__PresentationText__3SjqZ\",\"Desktop__TavernierText\":\"Presentation_Desktop__TavernierText__3GYae\",\"Mobile\":\"Presentation_Mobile__1BOhv\",\"CrossSword\":\"Presentation_CrossSword__2bXRM\",\"CrossSwordDesktop\":\"Presentation_CrossSwordDesktop__14LJS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddPlayerContainer\":\"ContactList_AddPlayerContainer__THrvv\",\"AddPlayerContainer__Image\":\"ContactList_AddPlayerContainer__Image__1eVDU\",\"ContactList__List__Item\":\"ContactList_ContactList__List__Item__3WmnJ\",\"ContactList__List__Item__Btn\":\"ContactList_ContactList__List__Item__Btn__1RJee\",\"ContactList__List__Item__Btn__Invited\":\"ContactList_ContactList__List__Item__Btn__Invited__1FJE4\",\"ContactList__List__Item__Avatar\":\"ContactList_ContactList__List__Item__Avatar__SdoiL\",\"ContactList__List__Item__Content\":\"ContactList_ContactList__List__Item__Content__9KyxN\",\"AddPlayer\":\"ContactList_AddPlayer__2yf9w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav\":\"Nav_Nav__2rbxA\",\"Nav__Header\":\"Nav_Nav__Header__2yVeX\",\"Nav__Header__Welcome\":\"Nav_Nav__Header__Welcome__3WsTe\",\"Nav__Header__Welcome__Title\":\"Nav_Nav__Header__Welcome__Title__2zXvv\",\"Nav__Header__Welcome__User\":\"Nav_Nav__Header__Welcome__User__U_Qeo\",\"Nav__Logo\":\"Nav_Nav__Logo__23tE0\",\"Nav__Menu\":\"Nav_Nav__Menu__ltQax\",\"Nav__Menu__Open\":\"Nav_Nav__Menu__Open__3gais\",\"Nav__Menu__Container\":\"Nav_Nav__Menu__Container__3L1Az\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Layout_Auth__3kF7e\",\"Auth__Logo\":\"Layout_Auth__Logo__28TZ6\",\"Auth__Main\":\"Layout_Auth__Main__13wNf\",\"Auth__Footer\":\"Layout_Auth__Footer__BSSa9\",\"Main\":\"Layout_Main__3C81A\",\"Main__Main\":\"Layout_Main__Main__21iC3\",\"Main__Footer\":\"Layout_Main__Footer__2r9WS\",\"Footer\":\"Layout_Footer__1NUYI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ScreenContainer\":\"ScreenShare_ScreenContainer__1zYzm\",\"ScreenContainer__Logo\":\"ScreenShare_ScreenContainer__Logo__3jsns\",\"ScreenContainer__Icons\":\"ScreenShare_ScreenContainer__Icons__JYttf\",\"ScreenContainer__Icons__D20\":\"ScreenShare_ScreenContainer__Icons__D20__1R21b\",\"ScreenContainer__Icons__AddPlayer\":\"ScreenShare_ScreenContainer__Icons__AddPlayer__3D16g\",\"AddPlayerContainer\":\"ScreenShare_AddPlayerContainer__2lP22\",\"AddPlayerContainer__Image\":\"ScreenShare_AddPlayerContainer__Image__GhzHE\",\"ContactList__List__Item\":\"ScreenShare_ContactList__List__Item__3OdR4\",\"ContactList__List__Item__Btn\":\"ScreenShare_ContactList__List__Item__Btn__j8nSc\",\"ContactList__List__Item__Avatar\":\"ScreenShare_ContactList__List__Item__Avatar__2JW5T\",\"ContactList__List__Item__Content\":\"ScreenShare_ContactList__List__Item__Content__xAMjU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ConnectedContactsList\":\"ConnectedContactsList_ConnectedContactsList__nFSyq\",\"ConnectedContactsList__List\":\"ConnectedContactsList_ConnectedContactsList__List__frE2B\",\"ConnectedContactsList__List__Avatar\":\"ConnectedContactsList_ConnectedContactsList__List__Avatar__3BzxW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"AvatarsList_Modal__2AMw1\",\"Modal__Closebtn\":\"AvatarsList_Modal__Closebtn__2Zlh9\",\"AvatarLists\":\"AvatarsList_AvatarLists__17QNv\",\"AvatarLists__Container\":\"AvatarsList_AvatarLists__Container__1RwUC\",\"AvatarLists__Valider\":\"AvatarsList_AvatarLists__Valider__2C1EO\",\"Header\":\"AvatarsList_Header__382kB\"};","module.exports = __webpack_public_path__ + \"static/media/logo1.dc9a0cbd.svg\";","module.exports = __webpack_public_path__ + \"static/media/boutoncroix.9d1620e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/Avatardefault.6c6c318f.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavLinks\":\"NavLinks_NavLinks__3rq19\",\"NavLinks__Open\":\"NavLinks_NavLinks__Open__3WC-s\",\"NavLinks__Deconnexion\":\"NavLinks_NavLinks__Deconnexion__3G_cI\",\"NavLinks__Deconnexion__Title\":\"NavLinks_NavLinks__Deconnexion__Title__3T7jB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contact\":\"Contact_Contact__2W7cr\",\"Contact_Title\":\"Contact_Contact_Title__2jalU\",\"Contact_Content\":\"Contact_Contact_Content__1Ph5I\",\"Contact_Content_Container\":\"Contact_Contact_Content_Container__2kCvz\",\"Contact_Image\":\"Contact_Contact_Image__3Ep4Z\",\"Contact_Btn\":\"Contact_Contact_Btn__2nu_w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DiceRoller\":\"DiceRoller_DiceRoller__1t-4o\",\"DiceRoller__Multiplier\":\"DiceRoller_DiceRoller__Multiplier__1Ds-s\",\"DiceRoller__Dice__Container\":\"DiceRoller_DiceRoller__Dice__Container__qJpay\",\"DiceRoller__Result__Container\":\"DiceRoller_DiceRoller__Result__Container__1tgbp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Tavern\":\"Tavern_Tavern__vVljO\",\"Tavern__Avatar\":\"Tavern_Tavern__Avatar__1r0-w\",\"Tavern__Chat__Container\":\"Tavern_Tavern__Chat__Container__3s6v1\",\"ContactListMoreSelf\":\"Tavern_ContactListMoreSelf__rRxK4\"};","module.exports = __webpack_public_path__ + \"static/media/Avatardefault.ee2cdef1.png\";","module.exports = __webpack_public_path__ + \"static/media/d20.b54abe06.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Connexion\":\"Home_Connexion__3JxL_\",\"Connexion__Container\":\"Home_Connexion__Container__2LsKY\",\"Arrow\":\"Home_Arrow__3aN8R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatarCase\":\"AvatarItem_avatarCase__2tzX8\",\"radio\":\"AvatarItem_radio__3aWpN\",\"Highlighted\":\"AvatarItem_Highlighted__3uG2N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__32mLz\",\"Modal__goblin\":\"Modal_Modal__goblin__2TYTS\",\"Buttons__Container\":\"Modal_Buttons__Container__19mAp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Search_Form__2Bp4N\",\"Button\":\"Search_Button__2Sz7u\",\"Input\":\"Search_Input__1O3l9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Thread\":\"Thread_Thread__akCix\",\"Thread__Welcome\":\"Thread_Thread__Welcome__1UDow\",\"Thread__PostsContainer\":\"Thread_Thread__PostsContainer__TZDFK\"};","module.exports = __webpack_public_path__ + \"static/media/backgroundvideo.3dfe0724.mp4\";","module.exports = __webpack_public_path__ + \"static/media/logocroix.5e81e88f.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InvitationHeader\":\"InvitationHeader_InvitationHeader__2Q-nA\",\"InvitationHeader__Number\":\"InvitationHeader_InvitationHeader__Number__24OQV\"};","module.exports = __webpack_public_path__ + \"static/media/turn-off.f540b25a.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Video\":\"Video_Video__Fkw-U\"};","module.exports = __webpack_public_path__ + \"static/media/shield.daa42c3d.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ErrorMessage\":\"ErrorMessage_ErrorMessage__1mTid\"};","module.exports = __webpack_public_path__ + \"static/media/scroll.6d0f02c4.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dice\":\"Dice_Dice__iMTV4\"};","module.exports = __webpack_public_path__ + \"static/media/d4.894ea704.svg\";","module.exports = __webpack_public_path__ + \"static/media/d6.decfdae0.svg\";","module.exports = __webpack_public_path__ + \"static/media/d8.a6119591.svg\";","module.exports = __webpack_public_path__ + \"static/media/d10.815ee7ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/d12.7f1b8d40.svg\";","module.exports = __webpack_public_path__ + \"static/media/d20.b54abe06.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Multiplier\":\"Multiplier_Multiplier__3xOXp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Result\":\"Result_Result__WzjCg\"};","module.exports = __webpack_public_path__ + \"static/media/door.96c14055.svg\";","module.exports = __webpack_public_path__ + \"static/media/addplayer.73bf049a.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__Avhg6\"};","module.exports = __webpack_public_path__ + \"static/media/goblin.02951be8.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"Title_Title__1VMbv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TitleList\":\"Titles_TitleList__OPvET\"};","module.exports = __webpack_public_path__ + \"static/media/dwarf_female_bg.ced6a075.png\";","module.exports = __webpack_public_path__ + \"static/media/Dwarf_male_bg.cce72e4c.png\";","module.exports = __webpack_public_path__ + \"static/media/elf_female_bg.7ab329a6.png\";","module.exports = __webpack_public_path__ + \"static/media/elf_male_bg.ed645a34.png\";","module.exports = __webpack_public_path__ + \"static/media/gnome_female_bg.086a6308.png\";","module.exports = __webpack_public_path__ + \"static/media/gnome_male_bg.101d3e48.png\";","module.exports = __webpack_public_path__ + \"static/media/halfelf_female_bg.27dd6986.png\";","module.exports = __webpack_public_path__ + \"static/media/halfelf_male_bg.9675b78a.png\";","module.exports = __webpack_public_path__ + \"static/media/human_female_bg.488a94ac.png\";","module.exports = __webpack_public_path__ + \"static/media/human_male_bg.ae49f34d.png\";","module.exports = __webpack_public_path__ + \"static/media/lizardmen_female_bg.27482540.png\";","module.exports = __webpack_public_path__ + \"static/media/lizardmen_male_bg.cebd58c6.png\";","module.exports = __webpack_public_path__ + \"static/media/orc_female_bg.7788de45.png\";","module.exports = __webpack_public_path__ + \"static/media/orc_male_bg.a2b0799e.png\";","module.exports = __webpack_public_path__ + \"static/media/ratmen_female_bg.15951062.png\";","module.exports = __webpack_public_path__ + \"static/media/Ratmen_male_bg.13241e3c.png\";","module.exports = __webpack_public_path__ + \"static/media/feather.daa89045.svg\";","module.exports = __webpack_public_path__ + \"static/media/team.6857bbe4.svg\";","module.exports = __webpack_public_path__ + \"static/media/skull.02fb4003.svg\";","module.exports = __webpack_public_path__ + \"static/media/fire.cb62af30.svg\";","module.exports = __webpack_public_path__ + \"static/media/404.c4b5987e.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotFound\":\"NotFound_NotFound__2aMLo\"};","import {\n  WS_CONNECT,\n  addPost,\n  removePost,\n  removeContact,\n  addContactRequest,\n  addContact,\n  contactUpdate,\n  savePosts,\n  tavernInvite,\n  deleteTavernInvite,\n} from '../actions';\n\nlet socketCanal;\n\nexport const socket = (store) => (next) => (action) => {\n  switch (action.type) {\n    case WS_CONNECT:\n      socketCanal = window.io('http://localhost:8080');\n      socketCanal.on('connected_user', (msg) => console.log(msg));\n\n      socketCanal.on('receive_post', (post) => {\n        store.dispatch(addPost(post));\n      });\n\n      // Used to update author avatar on thread\n      socketCanal.on('save_posts', (posts) => {\n        store.dispatch(savePosts(posts));\n      });\n\n      socketCanal.on('delete_post', (id) => {\n        store.dispatch(removePost(+id));\n      });\n\n      socketCanal.on('add_contact', ({ contactInfos }) => {\n        const contact = {\n          ...contactInfos.user,\n          pendingRequests: contactInfos.pendingRequests,\n          tavernRequests: contactInfos.tavernRequests,\n          contacts: contactInfos.contacts,\n        };\n\n        delete contact.password;\n\n        store.dispatch(addContactRequest(contact));\n      });\n\n      socketCanal.on('accept_contact', ({ contactInfos }) => {\n        const contact = {\n          ...contactInfos.user,\n          pendingRequests: contactInfos.pendingRequests,\n          tavernRequests: contactInfos.tavernRequests,\n          contacts: contactInfos.contacts,\n        };\n\n        delete contact.password;\n\n        store.dispatch(addContact(contact));\n      });\n\n      socketCanal.on('contact_update', (contact) => {\n        delete contact.posts;\n\n        store.dispatch(contactUpdate(contact));\n      });\n\n      socketCanal.on('delete_contact', ({ contactInfos }) => {\n        const contact = {\n          ...contactInfos.user,\n          pendingRequests: contactInfos.pendingRequests,\n          tavernRequests: contactInfos.tavernRequests,\n          contacts: contactInfos.contacts,\n        };\n\n        delete contact.password;\n\n        store.dispatch(removeContact(contact));\n      });\n\n      socketCanal.on('tavern_invite', ({ gamemaster, participantId, tavernId, date }) => {\n        store.dispatch(tavernInvite(gamemaster, participantId, tavernId, date));\n      });\n\n      socketCanal.on('delete_tavern_invite', ({ gamemaster, participant, tavernId }) => {\n        store.dispatch(deleteTavernInvite(gamemaster, participant, tavernId));\n      });\n\n      socketCanal.on('disconnected_user', ({ user, message }) => {\n        socketCanal.removeAllListeners();\n      });\n      break;\n    default:\n      next(action);\n  }\n};\n","export const TAVERN_CONTACT_CONNECT = 'TAVERN_CONTACT_CONNECT';\r\nexport const TAVERN_CONTACT_DISCONNECT = 'TAVERN_CONTACT_DISCONNECT';\r\nexport const ADD_CHAT_MESSAGE = 'ADD_CHAT_MESSAGE';\r\nexport const RESET_CHAT = 'RESET_CHAT';\r\nexport const INVITE_CONTACT = 'INVITE_CONTACT';\r\nexport const TAVERN_INVITE = 'TAVERN_INVITE';\r\nexport const OPEN_TAVERN = 'OPEN_TAVERN';\r\nexport const DELETE_TAVERN = 'DELETE_TAVERN';\r\nexport const DELETE_TAVERN_INVITE = 'DELETE_TAVERN_INVITE';\r\nexport const CLEAR_CONNECTED_CONTACTS_LIST = 'CLEAR_CONNECTED_CONTACTS_LIST';\r\n\r\nexport const tavernContactConnect = (user) => ({ type: TAVERN_CONTACT_CONNECT, user });\r\nexport const tavernContactDisconnect = (userId) => ({ type: TAVERN_CONTACT_DISCONNECT, userId });\r\nexport const addChatMessage = (message) => ({ type: ADD_CHAT_MESSAGE, message });\r\nexport const resetChat = () => ({ type: RESET_CHAT });\r\nexport const inviteContact = (contactId, tavernId) => ({\r\n  type: INVITE_CONTACT,\r\n  contactId,\r\n  tavernId,\r\n});\r\nexport const tavernInvite = (gamemaster, participantId, tavernId, date) => ({\r\n  type: TAVERN_INVITE,\r\n  gamemaster,\r\n  participantId,\r\n  tavernId,\r\n  date,\r\n});\r\nexport const openTavern = (isInitiator) => ({ type: OPEN_TAVERN, isInitiator });\r\nexport const deleteTavern = (tavernId, gamemaster, participant) => ({\r\n  type: DELETE_TAVERN,\r\n  tavernId,\r\n  gamemaster,\r\n  participant,\r\n});\r\nexport const deleteTavernInvite = (gamemaster, participant, tavernId) => ({\r\n  type: DELETE_TAVERN_INVITE,\r\n  gamemaster,\r\n  participant,\r\n  tavernId,\r\n});\r\nexport const clearConnectedContactsList = () => ({ type: CLEAR_CONNECTED_CONTACTS_LIST });\r\n","export const SIGNUP = 'SIGNUP';\r\nexport const LOGIN = 'LOGIN';\r\nexport const CONNECT = 'CONNECT';\r\nexport const IS_LOGGED_IN = 'IS_LOGGED_IN';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const DISCONNECT = 'DISCONNECT';\r\n\r\nexport const signup = () => ({ type: SIGNUP });\r\nexport const login = () => ({ type: LOGIN });\r\nexport const connect = (response) => ({ type: CONNECT, response });\r\nexport const isLoggedIn = () => ({ type: IS_LOGGED_IN });\r\nexport const logout = () => ({ type: LOGOUT });\r\nexport const disconnect = (response) => ({ type: DISCONNECT, response });\r\n","export const FETCH_POSTS = 'FETCH_POSTS';\r\nexport const SAVE_POSTS = 'SAVE_POSTS';\r\nexport const SAVE_POST = 'SAVE_POST';\r\nexport const POST = 'POST';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const SAVE_DELETE_POST = 'SAVE_DELETE_POST';\r\nexport const REMOVE_POST = 'REMOVE_POST';\r\nexport const ADD_POST = 'ADD_POST';\r\n\r\nexport const fetchPosts = () => ({ type: FETCH_POSTS });\r\nexport const savePosts = (posts) => ({ type: SAVE_POSTS, posts });\r\nexport const savePost = (post) => ({ type: SAVE_POST, post });\r\nexport const post = () => ({ type: POST });\r\nexport const deletePost = (id) => ({ type: DELETE_POST, id });\r\nexport const removePost = (id) => ({ type: REMOVE_POST, id });\r\nexport const addPost = (post) => ({ type: ADD_POST, post });\r\nexport const saveDeletePost = (id_post) => ({ type: SAVE_DELETE_POST, id_post });\r\n","export const SEND_CONTACT_REQUEST = 'SEND_CONTACT_REQUEST';\nexport const ADD_CONTACT_REQUEST = 'ADD_CONTACT_REQUEST';\nexport const ACCEPT_CONTACT = 'ACCEPT_CONTACT';\nexport const ADD_CONTACT = 'ADD_CONTACT';\nexport const DELETE_CONTACT = 'DELETE_CONTACT';\nexport const REMOVE_CONTACT = 'REMOVE_CONTACT';\nexport const SET_IS_EDITING = 'SET_IS_EDITING';\nexport const EDIT_USER_ACCOUNT = 'EDIT_USER_ACCOUNT';\nexport const DELETE_ACOUNT = 'DELETE_ACOUNT';\nexport const UPDATE_AVATAR = 'UPDATE_AVATAR';\nexport const UPDATE_IMAGE = 'UPDATE_IMAGE';\nexport const UPDATE_TITLE = 'UPDATE_TITLE';\nexport const CONTACT_UPDATE = 'CONTACT_UPDATE';\n\nexport const sendContactRequest = (contactId) => ({ type: SEND_CONTACT_REQUEST, contactId });\nexport const addContactRequest = (contact) => ({ type: ADD_CONTACT_REQUEST, contact });\nexport const acceptContact = (contactId) => ({ type: ACCEPT_CONTACT, contactId });\nexport const addContact = (contact) => ({ type: ADD_CONTACT_REQUEST, contact });\nexport const deleteContact = (contactId) => ({ type: DELETE_CONTACT, contactId });\nexport const removeContact = (contact) => ({ type: REMOVE_CONTACT, contact });\nexport const setIsEditing = () => ({ type: SET_IS_EDITING });\nexport const editUserAccount = () => ({ type: EDIT_USER_ACCOUNT });\nexport const deleteAcount = (userId) => ({ type: DELETE_ACOUNT, userId });\nexport const updateAvatar = (avatar) => ({\n  type: UPDATE_AVATAR,\n  avatar,\n});\nexport const updateImage = (avatar) => ({\n  type: UPDATE_IMAGE,\n  avatar,\n});\nexport const updateTitle = (title) => ({ type: UPDATE_TITLE, title });\nexport const contactUpdate = (contact) => ({ type: CONTACT_UPDATE, contact });\n","export * from './tavern';\r\nexport * from './auth';\r\nexport * from './post';\r\nexport * from './socket';\r\nexport * from './user';\r\n\r\nexport const INPUT_CHANGE = 'INPUT_CHANGE';\r\nexport const RESET_FIELDS = 'RESET_FIELDS';\r\nexport const SET_INITIAL_LOADING = 'SET_INITIAL_LOADING';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const SET_ERROR = 'SET_ERROR';\r\nexport const UNSET_ERROR = 'UNSET_ERROR';\r\nexport const ISRESOLVE = 'ISRESOLVE'\r\nexport const SET_TAVERN_ID = 'SET_TAVERN_ID';\r\n\r\nexport const inputChange = (name, value, reducerName) => ({\r\n  type: INPUT_CHANGE,\r\n  name,\r\n  value,\r\n  reducerName,\r\n});\r\nexport const resetFields = (reducer) => ({ type: RESET_FIELDS, reducer });\r\nexport const setInitialLoading = () => ({ type: SET_INITIAL_LOADING });\r\nexport const setLoading = () => ({ type: SET_LOADING });\r\nexport const setError = (errorMessage, errorType, data) => ({ type: SET_ERROR, errorMessage, errorType, data });\r\nexport const unsetError = () => ({ type: UNSET_ERROR });\r\nexport const setTavernId = (tavernId) => ({ type: SET_TAVERN_ID, tavernId });\r\nexport const isResolve = () => ({ type: ISRESOLVE });\r\n","import {\r\n  INVITE_CONTACT,\r\n  TAVERN_CONTACT_CONNECT,\r\n  TAVERN_CONTACT_DISCONNECT,\r\n  INPUT_CHANGE,\r\n  ADD_CHAT_MESSAGE,\r\n  RESET_FIELDS,\r\n  RESET_CHAT,\r\n  OPEN_TAVERN,\r\n  DELETE_TAVERN_INVITE,\r\n  CLEAR_CONNECTED_CONTACTS_LIST,\r\n} from '../actions';\r\n\r\nconst INITIAL_STATE = {\r\n  connectedContacts: [],\r\n  messages: [],\r\n  message: '',\r\n  isInitiator: false,\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action = {}) => {\r\n  switch (action.type) {\r\n    case OPEN_TAVERN:\r\n      return { ...state, isInitiator: action.isInitiator || false };\r\n    case INVITE_CONTACT: {\r\n      const requester = state.connectedContacts.find(\r\n        (connectedContact) => +connectedContact.id === +action.gamemaster.id,\r\n      );\r\n\r\n      const contactIndex = requester.contacts.findIndex(\r\n        (contact) => +contact.id === action.participant.id,\r\n      );\r\n\r\n      requester.contacts.splice(contactIndex, 1, action.participant);\r\n\r\n      return {\r\n        ...state,\r\n        connectedContacts: state.connectedContacts\r\n          .filter((connectedContact) => +connectedContact.id !== +action.gamemaster.id)\r\n          .concat(requester),\r\n      };\r\n    }\r\n    case DELETE_TAVERN_INVITE: {\r\n      const requester = state.connectedContacts.find(\r\n        (connectedContact) => +connectedContact.id === +action.gamemaster.id,\r\n      );\r\n\r\n      if (!requester) {\r\n        return state;\r\n      }\r\n\r\n      const contactIndex = requester.contacts.findIndex(\r\n        (contact) => +contact.id === action.participant.id,\r\n      );\r\n\r\n      requester.contacts[contactIndex].tavernRequests = requester.contacts[\r\n        contactIndex\r\n      ].tavernRequests.filter((tavernRequest) => tavernRequest.tavern_id !== action.tavernId);\r\n\r\n      return {\r\n        ...state,\r\n        connectedContacts: state.connectedContacts\r\n          .filter((connectedContact) => +connectedContact.id !== +action.gamemaster.id)\r\n          .concat(requester),\r\n      };\r\n    }\r\n    case CLEAR_CONNECTED_CONTACTS_LIST:\r\n      return {\r\n        ...state,\r\n        connectedContacts: [],\r\n      };\r\n    case TAVERN_CONTACT_CONNECT:\r\n      return {\r\n        ...state,\r\n        connectedContacts: [...state.connectedContacts, action.user],\r\n      };\r\n    case TAVERN_CONTACT_DISCONNECT:\r\n      return {\r\n        ...state,\r\n        connectedContacts: state.connectedContacts.filter(\r\n          (contact) => contact.connectionUserId !== action.userId,\r\n        ),\r\n      };\r\n    case INPUT_CHANGE:\r\n      if (action.reducerName === 'tavern') {\r\n        return {\r\n          ...state,\r\n          [action.name]: action.value,\r\n        };\r\n      }\r\n      return state;\r\n    case ADD_CHAT_MESSAGE:\r\n      return {\r\n        ...state,\r\n        messages: state.messages.concat(action.message),\r\n      };\r\n    case RESET_FIELDS:\r\n      if (action.reducer === 'tavern') {\r\n        return {\r\n          ...state,\r\n          message: '',\r\n        };\r\n      }\r\n      return state;\r\n    case RESET_CHAT:\r\n      return {\r\n        ...state,\r\n        messages: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const websiteName = 'TheTavern';\r\nexport const apiUrl = 'http://localhost:8080/api/v1';\r\n\r\nexport const defaultTitles = [\r\n  'Apprenti aventurier',\r\n  'Aventurier',\r\n  'Prêtre de Haidge',\r\n  'Troubadour',\r\n  'Aventurière incroyable',\r\n  'Demon du jeu',\r\n  'Buveur de boisson',\r\n  'Maître du Monde',\r\n  'Mage Noir',\r\n  'Filou des dés',\r\n  'Mendiant de passage',\r\n  'Prếcheur de gameplay',\r\n  'Vigile du roleplay',\r\n  'Maitre trapéziste',\r\n  'En a gros sur la patate',\r\n  'Coincé dans un donjon',\r\n].sort();\r\n\r\nexport const getDate = () => {\r\n  let year = new Date().getFullYear();\r\n  let month = new Date().getMonth();\r\n  let day = new Date().getDay();\r\n\r\n  month = month < 10 ? (month = '0' + month) : month;\r\n  day = day < 10 ? (day = '0' + day) : day;\r\n\r\n  return { year, month, day };\r\n};\r\n","import { INPUT_CHANGE, RESET_FIELDS } from '../actions';\r\nimport { getDate } from '../util';\r\n\r\nconst { year } = getDate();\r\n\r\nconst INITIAL_STATE = {\r\n  //signup form\r\n  email: '',\r\n  username: '',\r\n  password: '',\r\n  confirmPassword: '',\r\n  birthdate: `${year - 16}-01-01`,\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action = {}) => {\r\n  switch (action.type) {\r\n    case INPUT_CHANGE:\r\n      if (action.reducerName === 'auth') {\r\n        return {\r\n          ...state,\r\n          [action.name]: action.value,\r\n        };\r\n      }\r\n      return state;\r\n    case RESET_FIELDS:\r\n      if (action.reducer === 'auth') {\r\n        return {\r\n          ...state,\r\n\r\n          email: '',\r\n          username: '',\r\n          password: '',\r\n          confirmPassword: '',\r\n          birthdate: '',\r\n        };\r\n      }\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import avatardefault from '../assets/images/avatar/Avatardefault.png';\r\nimport { defaultTitles } from '../util';\r\n\r\nimport {\r\n  CONNECT,\r\n  DISCONNECT,\r\n  SET_IS_EDITING,\r\n  INPUT_CHANGE,\r\n  EDIT_USER_ACCOUNT,\r\n  DELETE_ACOUNT,\r\n  ADD_CONTACT_REQUEST,\r\n  DELETE_CONTACT,\r\n  REMOVE_CONTACT,\r\n  SEND_CONTACT_REQUEST,\r\n  ACCEPT_CONTACT,\r\n  ADD_CONTACT,\r\n  UPDATE_AVATAR,\r\n  UPDATE_IMAGE,\r\n  UPDATE_TITLE,\r\n  CONTACT_UPDATE,\r\n  TAVERN_INVITE,\r\n  DELETE_TAVERN,\r\n  DELETE_TAVERN_INVITE,\r\n  OPEN_TAVERN,\r\n  INVITE_CONTACT,\r\n} from '../actions';\r\n\r\nconst INITIAL_STATE = {\r\n  loggedUser: {},\r\n  defaultTitles,\r\n  hasTriedToAuthenticate: false,\r\n  avatar: avatardefault,\r\n  isEditing: false,\r\n  description: '',\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action = {}) => {\r\n  switch (action.type) {\r\n    case CONNECT:\r\n      return {\r\n        ...state,\r\n        loggedUser: action.response.user,\r\n        isLoggedIn: action.response.isLoggedIn,\r\n        hasTriedToAuthenticate: true,\r\n      };\r\n    case DISCONNECT:\r\n      return {\r\n        ...state,\r\n        loggedUser: action.response.user,\r\n        isLoggedIn: action.response.isLoggedIn,\r\n      };\r\n    case SET_IS_EDITING:\r\n      return {\r\n        ...state,\r\n        isEditing: !state.isEditing,\r\n        description: state.isEditing ? state.description : state.loggedUser.description,\r\n      };\r\n    case INPUT_CHANGE:\r\n      if (action.reducerName === 'user') {\r\n        return {\r\n          ...state,\r\n          [action.name]: action.value,\r\n        };\r\n      }\r\n      return state;\r\n    case EDIT_USER_ACCOUNT:\r\n      return {\r\n        ...state,\r\n        loggedUser: action.user,\r\n      };\r\n    case SEND_CONTACT_REQUEST:\r\n      return {\r\n        ...state,\r\n        loggedUser: action.user,\r\n      };\r\n    case ADD_CONTACT_REQUEST:\r\n      if (+action.contact.id === state.loggedUser.id) {\r\n        return {\r\n          ...state,\r\n          loggedUser: action.contact,\r\n        };\r\n      }\r\n      return state;\r\n    case ACCEPT_CONTACT:\r\n      return {\r\n        ...state,\r\n        loggedUser: action.user,\r\n      };\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        loggedUser: action.contact,\r\n      };\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        loggedUser: action.user,\r\n      };\r\n    case REMOVE_CONTACT:\r\n      if (+action.contact.id === state.loggedUser.id) {\r\n        return {\r\n          ...state,\r\n          loggedUser: action.contact,\r\n        };\r\n      }\r\n      return state;\r\n    case DELETE_ACOUNT:\r\n      return {\r\n        ...state,\r\n        loggedUser: {},\r\n        isLoggedIn: false,\r\n      };\r\n    case UPDATE_AVATAR:\r\n      return {\r\n        ...state,\r\n        avatar: action.avatar,\r\n      };\r\n    case UPDATE_IMAGE:\r\n      return {\r\n        ...state,\r\n        loggedUser: {\r\n          ...state.loggedUser,\r\n          avatar: action.avatar,\r\n        },\r\n      };\r\n    case UPDATE_TITLE:\r\n      return {\r\n        ...state,\r\n        loggedUser: {\r\n          ...state.loggedUser,\r\n          title: action.title,\r\n        },\r\n      };\r\n    case CONTACT_UPDATE:\r\n      const sent = state.loggedUser.pendingRequests.sent.map((contact) => {\r\n        let updatedContact = contact;\r\n        if (contact.id === action.contact.id) updatedContact = action.contact;\r\n        return updatedContact;\r\n      });\r\n\r\n      const received = state.loggedUser.pendingRequests.received.map((contact) => {\r\n        let updatedContact = contact;\r\n        if (contact.id === action.contact.id) updatedContact = action.contact;\r\n        return updatedContact;\r\n      });\r\n      const contacts = state.loggedUser.contacts.map((contact) => {\r\n        let updatedContact = contact;\r\n        if (contact.id === action.contact.id) updatedContact = action.contact;\r\n        return updatedContact;\r\n      });\r\n\r\n      const tavernRequests = state.loggedUser.tavernRequests.map((contact) => {\r\n        let updatedContact = contact;\r\n        if (contact.id === action.contact.id) updatedContact = action.contact;\r\n        return updatedContact;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        loggedUser: {\r\n          ...state.loggedUser,\r\n          pendingRequests: { ...state.loggedUser.pendingRequests, sent, received },\r\n          contacts,\r\n          tavernRequests,\r\n        },\r\n      };\r\n    case INVITE_CONTACT:\r\n      return {\r\n        ...state,\r\n        loggedUser: {\r\n          ...state.loggedUser,\r\n          contacts: state.loggedUser.contacts\r\n            .filter((contact) => +contact.id !== +action.participant.id)\r\n            .concat(action.participant),\r\n        },\r\n      };\r\n    case TAVERN_INVITE:\r\n      if (action.participantId === state.loggedUser.id) {\r\n        return {\r\n          ...state,\r\n          loggedUser: {\r\n            ...state.loggedUser,\r\n            tavernRequests: [\r\n              ...state.loggedUser.tavernRequests,\r\n              {\r\n                gamemaster: action.gamemaster,\r\n                tavernId: action.tavernId,\r\n                date: action.date,\r\n              },\r\n            ],\r\n          },\r\n        };\r\n      }\r\n      return state;\r\n    case DELETE_TAVERN_INVITE:\r\n      if (state.loggedUser.id === action.participant.id) {\r\n        return {\r\n          ...state,\r\n          loggedUser: {\r\n            ...state.loggedUser,\r\n            tavernRequests: state.loggedUser.tavernRequests.filter(\r\n              (tavernRequest) => tavernRequest.tavernId !== action.tavernId,\r\n            ),\r\n          },\r\n        };\r\n      }\r\n      return state;\r\n    case OPEN_TAVERN:\r\n      return {\r\n        ...state,\r\n        loggedUser: {\r\n          ...state.loggedUser,\r\n          isGamemaster: true,\r\n        },\r\n      };\r\n    case DELETE_TAVERN: {\r\n      let contacts;\r\n      if (action.gamemaster.id === state.loggedUser.id) {\r\n        contacts = [...state.loggedUser.contacts];\r\n        const contactIndex = contacts.findIndex(\r\n          (contact) => +contact.id === +action.participant.id,\r\n        );\r\n        contacts.splice(contactIndex, 1, action.participant);\r\n      }\r\n      return {\r\n        ...state,\r\n        loggedUser: {\r\n          ...state.loggedUser,\r\n          isGamemaster: false,\r\n          contacts: contacts ? contacts : [...state.loggedUser.contacts],\r\n        },\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { INPUT_CHANGE, RESET_FIELDS, SAVE_POSTS, ADD_POST, REMOVE_POST } from '../actions';\r\n\r\nconst INITIAL_STATE = {\r\n  list: [],\r\n  post: '',\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action = {}) => {\r\n  switch (action.type) {\r\n    case INPUT_CHANGE:\r\n      if (action.reducerName === 'post') {\r\n        return {\r\n          ...state,\r\n          [action.name]: action.value,\r\n        };\r\n      }\r\n      return state;\r\n    case REMOVE_POST:\r\n      return {\r\n        ...state,\r\n        list: state.list.filter((post) => post.id !== action.id),\r\n      };\r\n    case RESET_FIELDS:\r\n      if (action.reducer === 'post') {\r\n        return {\r\n          ...state,\r\n          post: '',\r\n        };\r\n      }\r\n      return state;\r\n    case SAVE_POSTS:\r\n      return {\r\n        ...state,\r\n        list: action.posts,\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        list: [...state.list, action.post],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport {\r\n  SET_LOADING,\r\n  SET_ERROR,\r\n  UNSET_ERROR,\r\n  SET_INITIAL_LOADING,\r\n  SET_TAVERN_ID,\r\n  ISRESOLVE,\r\n} from '../actions';\r\n\r\nconst INITIAL_STATE = {\r\n  isResolve: false,\r\n  isInitialLoading: false,\r\n  isLoading: false,\r\n  hasError: {},\r\n  errorMessage: '',\r\n  tavernId: uuidv4(),\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action = {}) => {\r\n  switch (action.type) {\r\n    case SET_INITIAL_LOADING:\r\n      return {\r\n        ...state,\r\n        isInitialLoading: !state.isInitialLoading,\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: !state.isLoading,\r\n      };\r\n    case SET_ERROR:\r\n      switch (action.errorType) {\r\n        case 'all fields':\r\n          return {\r\n            ...state,\r\n            errorMessage: action.errorMessage,\r\n            hasError: { ...state.hasError, ...action.data },\r\n            isLoading: false,\r\n          };\r\n        case 'email':\r\n          return {\r\n            ...state,\r\n            errorMessage: action.errorMessage,\r\n            hasError: { ...state.hasError, email: true },\r\n            isLoading: false,\r\n          };\r\n        case 'username too long':\r\n          return {\r\n            ...state,\r\n            errorMessage: action.errorMessage,\r\n            hasError: { ...state.hasError, username: true },\r\n            isLoading: false,\r\n          };\r\n        case 'password not matching':\r\n          return {\r\n            ...state,\r\n            errorMessage: action.errorMessage,\r\n            hasError: { ...state.hasError, password: true, confirmPassword: true },\r\n            isLoading: false,\r\n          };\r\n        case 'invalid password':\r\n          return {\r\n            ...state,\r\n            errorMessage: action.errorMessage,\r\n            hasError: { ...state.hasError, password: true, confirmPassword: true },\r\n            isLoading: false,\r\n          };\r\n        default:\r\n          return {\r\n            ...state,\r\n            errorMessage: action.errorMessage,\r\n            hasError: true,\r\n            isLoading: false,\r\n          };\r\n      }\r\n    case UNSET_ERROR:\r\n      return {\r\n        ...state,\r\n        hasError: false,\r\n        errorMessage: '',\r\n      };\r\n    case ISRESOLVE:\r\n      return {\r\n        ...state,\r\n        isResolve: !state.isResolve,\r\n      };\r\n    case SET_TAVERN_ID:\r\n      return {\r\n        ...state,\r\n        tavernId: uuidv4(),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\nimport tavern from './tavern';\nimport auth from './auth';\nimport user from './user';\nimport post from './post';\nimport global from './global';\n// import error from './error';\n\nexport default combineReducers({ global, tavern, auth, user, post });\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport rootReducer from '../reducers';\nimport { auth, post, socket, user, tavern } from '../middlewares';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enhancers = composeEnhancers(applyMiddleware(auth, post, user, tavern, socket));\n\nconst store = createStore(rootReducer, enhancers);\n\nexport default store;\n","import axios from 'axios';\r\nimport {\r\n  LOGIN,\r\n  IS_LOGGED_IN,\r\n  LOGOUT,\r\n  connect,\r\n  disconnect,\r\n  setLoading,\r\n  setInitialLoading,\r\n  setError,\r\n  SIGNUP,\r\n  isResolve,\r\n} from '../actions';\r\nimport { apiUrl } from '../util/index';\r\nimport avatar from '../assets/images/avatar/Avatardefault.png';\r\n\r\nexport const auth = (store) => (next) => async (action) => {\r\n  const { auth } = store.getState();\r\n  switch (action.type) {\r\n    case SIGNUP:\r\n      try {\r\n        const data = {\r\n          email: auth.email,\r\n          avatar,\r\n          password: auth.password,\r\n          confirmPassword: auth.confirmPassword,\r\n          username: auth.username,\r\n          birthdate: auth.birthdate,\r\n        };\r\n        const { data: user } = await axios.post(`${apiUrl}/auth/signup`, data);\r\n\r\n        delete user.password;\r\n        store.dispatch(isResolve());\r\n      } catch (err) {\r\n        console.log(err);\r\n        // console.log(err.response.data.message)\r\n        store.dispatch(setError(err.response.data.message));\r\n      }\r\n      break;\r\n    case LOGIN:\r\n      try {\r\n        store.dispatch(setLoading());\r\n        const loginData = {\r\n          email: auth.email,\r\n          password: auth.password,\r\n        };\r\n\r\n        const { data } = await axios.post(`${apiUrl}/auth/login`, loginData, {\r\n          withCredentials: true,\r\n        });\r\n\r\n        delete data.user.password;\r\n        data.user.pendingRequests = data.pendingRequests;\r\n        data.user.tavernRequests = data.tavernRequests;\r\n        data.user.contacts = data.contacts;\r\n\r\n        store.dispatch(connect(data));\r\n      } catch (err) {\r\n        console.log(err);\r\n        store.dispatch(setError(err.response.data.message));\r\n      } finally {\r\n        store.dispatch(setLoading());\r\n      }\r\n      break;\r\n    case IS_LOGGED_IN:\r\n      store.dispatch(setInitialLoading());\r\n      try {\r\n        const { data } = await axios.post(\r\n          `${apiUrl}/auth/is-logged-in`,\r\n          {},\r\n          {\r\n            withCredentials: true,\r\n          },\r\n        );\r\n\r\n        delete data.user.password;\r\n\r\n        data.user.pendingRequests = data.pendingRequests;\r\n        data.user.tavernRequests = data.tavernRequests;\r\n        data.user.contacts = data.contacts;\r\n\r\n        if (data.isLoggedIn) {\r\n          store.dispatch(connect(data));\r\n        }\r\n      } catch (err) {\r\n        store.dispatch(connect({ user: null, isLoggedIn: false }));\r\n      } finally {\r\n        store.dispatch(setInitialLoading());\r\n      }\r\n      break;\r\n    case LOGOUT:\r\n      try {\r\n        store.dispatch(setLoading());\r\n        const { data } = await axios.post(`${apiUrl}/auth/logout`, {}, { withCredentials: true });\r\n\r\n        store.dispatch(disconnect(data));\r\n      } catch (err) {\r\n        store.dispatch(setError());\r\n      } finally {\r\n        store.dispatch(setLoading());\r\n      }\r\n      break;\r\n    default:\r\n      next(action);\r\n  }\r\n};\r\n","import axios from 'axios';\r\n\r\nimport { FETCH_POSTS, savePosts, setLoading, setError, POST, DELETE_POST } from '../actions';\r\nimport { apiUrl } from '../util/index';\r\n\r\nexport const post = (store) => (next) => async (action) => {\r\n  const { post, user } = store.getState();\r\n  switch (action.type) {\r\n    case DELETE_POST:\r\n      try {\r\n        store.dispatch(setLoading());\r\n        await axios.delete(`${apiUrl}/post/${action.id}`);\r\n      } catch (err) {\r\n        console.trace(err);\r\n        store.dispatch(setError());\r\n      } finally {\r\n        store.dispatch(setLoading());\r\n      }\r\n      break;\r\n    case FETCH_POSTS:\r\n      try {\r\n        store.dispatch(setLoading());\r\n        const { data: posts } = await axios.get(`${apiUrl}/post`);\r\n        store.dispatch(savePosts(posts));\r\n      } catch (err) {\r\n        console.trace(err);\r\n        store.dispatch(setError());\r\n      } finally {\r\n        store.dispatch(setLoading());\r\n      }\r\n      break;\r\n    case POST:\r\n      try {\r\n        store.dispatch(setLoading());\r\n        const postData = {\r\n          content: post.post,\r\n          user_id: user.loggedUser.id,\r\n        };\r\n\r\n        await axios.post(`${apiUrl}/post`, postData);\r\n      } catch (err) {\r\n        console.trace(err);\r\n        store.dispatch(setError());\r\n      } finally {\r\n        store.dispatch(setLoading());\r\n      }\r\n      break;\r\n    default:\r\n      next(action);\r\n  }\r\n};\r\n","import axios from 'axios';\nimport {\n  SEND_CONTACT_REQUEST,\n  ACCEPT_CONTACT,\n  DELETE_CONTACT,\n  EDIT_USER_ACCOUNT,\n  DELETE_ACOUNT,\n  UPDATE_IMAGE,\n  UPDATE_TITLE,\n  setLoading,\n  setError,\n} from '../actions';\nimport { apiUrl } from '../util/index';\n\nexport const user = (store) => (next) => async (action) => {\n  const { user } = store.getState();\n  switch (action.type) {\n    case SEND_CONTACT_REQUEST:\n      try {\n        store.dispatch(setLoading());\n        const user_id = user.loggedUser.id;\n        const contact_id = action.contactId;\n\n        const { data } = await axios.post(`${apiUrl}/contact/${user_id}/add/${contact_id}`);\n\n        action.user = data.user;\n        action.user.pendingRequests = data.pendingRequests;\n        action.user.tavernRequests = data.tavernRequests;\n        action.user.contacts = data.contacts;\n        delete action.user.password;\n\n        next(action);\n      } catch (err) {\n        store.dispatch(setError());\n      } finally {\n        store.dispatch(setLoading());\n      }\n      break;\n    case ACCEPT_CONTACT:\n      try {\n        store.dispatch(setLoading());\n        const user_id = +user.loggedUser.id;\n        const contact_id = +action.contactId;\n\n        const { data } = await axios.patch(`${apiUrl}/contact/${user_id}/accept/${contact_id}`);\n\n        action.user = data.user;\n        action.user.pendingRequests = data.pendingRequests;\n        action.user.tavernRequests = data.tavernRequests;\n        action.user.contacts = data.contacts;\n        delete action.user.password;\n\n        next(action);\n      } catch (err) {\n        store.dispatch(setError());\n      } finally {\n        store.dispatch(setLoading());\n      }\n      break;\n    case DELETE_CONTACT:\n      try {\n        store.dispatch(setLoading());\n        const user_id = user.loggedUser.id;\n        const contact_id = action.contactId;\n\n        const { data } = await axios.delete(`${apiUrl}/contact/${user_id}/delete/${contact_id}`);\n\n        action.user = data.user;\n        action.user.pendingRequests = data.pendingRequests;\n        action.user.tavernRequests = data.tavernRequests;\n        action.user.contacts = data.contacts;\n        delete action.user.password;\n\n        next(action);\n      } catch (err) {\n        store.dispatch(setError());\n      } finally {\n        store.dispatch(setLoading());\n      }\n      break;\n    case EDIT_USER_ACCOUNT:\n      try {\n        store.dispatch(setLoading());\n        let userData = {\n          description: user.description,\n        };\n\n        const { data } = await axios.patch(`${apiUrl}/user/${user.loggedUser.id}`, userData);\n\n        const updatedUser = {\n          ...data.user,\n          pendingRequests: data.pendingRequests,\n          tavernRequests: data.tavernRequests,\n          contacts: data.contacts,\n        };\n\n        delete updatedUser.password;\n\n        action.user = updatedUser;\n\n        next(action);\n      } catch (err) {\n        store.dispatch(setError());\n        console.trace(err);\n      } finally {\n        store.dispatch(setLoading());\n      }\n      break;\n    case DELETE_ACOUNT:\n      try {\n        store.dispatch(setLoading());\n        await axios.delete(`${apiUrl}/user/${action.userId}`);\n        next(action);\n      } catch (err) {\n        console.trace(err);\n        store.dispatch(setError());\n      } finally {\n        store.dispatch(setLoading());\n      }\n      break;\n    case UPDATE_IMAGE:\n      try {\n        store.dispatch(setLoading());\n\n        const avatarPath = {\n          avatar: action.avatar,\n        };\n\n        await axios.patch(`${apiUrl}/user/${user.loggedUser.id}`, avatarPath);\n\n        next(action);\n      } catch (err) {\n        console.trace(err);\n        store.dispatch(setError());\n      } finally {\n        store.dispatch(setLoading());\n      }\n      break;\n    case UPDATE_TITLE:\n      try {\n        store.dispatch(setLoading())\n\n        const data = {\n          title: action.title\n        }\n\n        await axios.patch(`${apiUrl}/user/${user.loggedUser.id}`, data);\n\n        next(action);\n      } catch (err) {\n        store.dispatch(setError(err))\n      } finally { \n        store.dispatch(setLoading())\n      }\n    break;\n    default:\n      next(action);\n  }\n};\n","import axios from 'axios';\r\nimport { INVITE_CONTACT, DELETE_TAVERN } from '../actions';\r\nimport { apiUrl } from '../util/index';\r\n\r\nexport const tavern = (store) => (next) => async (action) => {\r\n  const { user } = store.getState();\r\n  switch (action.type) {\r\n    case INVITE_CONTACT:\r\n      try {\r\n        const { data } = await axios.post(`${apiUrl}/tavern`, {\r\n          gamemaster_id: +user.loggedUser.id,\r\n          participant_id: +action.contactId,\r\n          tavern_id: action.tavernId,\r\n        });\r\n\r\n        action.participant = data.participant;\r\n        action.gamemaster = data.gamemaster;\r\n\r\n        next(action);\r\n      } catch (err) {\r\n        console.trace(err);\r\n      }\r\n      break;\r\n    case DELETE_TAVERN:\r\n      try {\r\n        let data;\r\n        if (action.gamemaster && action.participant) {\r\n          data = {\r\n            gamemaster_id: +action.gamemaster.id,\r\n            participant_id: +action.participant.id,\r\n          };\r\n        }\r\n\r\n        const response = await axios.delete(`${apiUrl}/tavern/${action.tavernId}`, {\r\n          data,\r\n        });\r\n\r\n        action.gamemaster = response.data.gamemaster;\r\n        action.participant = response.data.participant;\r\n\r\n        next(action);\r\n      } catch (err) {\r\n        console.trace(err);\r\n      } finally {\r\n        next(action);\r\n      }\r\n      break;\r\n    default:\r\n      next(action);\r\n  }\r\n};\r\n","export const WS_CONNECT = 'WS_CONNECT';\n\nexport const wsConnect = () => ({ type: WS_CONNECT });","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ component: Component, isLoggedIn, hasTriedToAuthenticate, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (hasTriedToAuthenticate) {\r\n          if (isLoggedIn) {\r\n            return <Component {...props} />;\r\n          } else {\r\n            return <Redirect to=\"/auth\" />;\r\n          }\r\n        } else {\r\n          return (\r\n          null\r\n          );\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nProtectedRoute.propTypes = {\r\n  component: PropTypes.object.isRequired,\r\n  isLoggedIn: PropTypes.bool,\r\n};\r\n\r\nProtectedRoute.defaultProps = {\r\n  isLoggedIn: false,\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import { connect } from 'react-redux';\r\n\r\nimport ProtectedRoute from '../hoc/ProtectedRoute';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.user.isLoggedIn,\r\n  hasTriedToAuthenticate: state.user.hasTriedToAuthenticate,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProtectedRoute);\r\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport styles from './NavLinks.module.scss';\nimport deconnetion from '../../../../../assets/images/turn-off.svg';\n\nconst NavLinks = ({ logout, isOpen, setIsOpen, tavernId }) => {\n  return (\n    <ul className={!isOpen ? styles.NavLinks : [styles.NavLinks, styles.NavLinks__Open].join(' ')}>\n      <li>\n        <NavLink onClick={setIsOpen} exact to=\"/\">\n          Thread\n        </NavLink>\n      </li>\n      <li>\n        <NavLink exact to={`/tavern/${tavernId}`}>\n          Tavern\n        </NavLink>\n      </li>\n      <li>\n        <NavLink onClick={setIsOpen} exact to=\"/compte\">\n          Compte\n        </NavLink>\n      </li>\n      <li>\n        <span className={styles.NavLinks__Deconnexion} onClick={logout}>\n          <img src={deconnetion} alt=\"bouton deconnexion\" />\n          <div className={styles.NavLinks__Deconnexion__Title}>Déconnexion</div>\n        </span>\n      </li>\n    </ul>\n  );\n};\n\nNavLinks.propTypes = {\n  logout: PropTypes.func.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n};\n\nexport default NavLinks;\n","import React from 'react';\r\n\r\nconst Sword = ({ isOpen }) => (\r\n  <div className={isOpen ? 'sword sword--open' : 'sword'}>\r\n    <div className=\"l-container container\">\r\n      <div className=\"l-sword\">\r\n        <div className=\"l-handle-orb handle-orb\"></div>\r\n        <div className=\"l-handle-block handle-block\"></div>\r\n        <div className=\"l-handle-block-curve handle-block-curve\"></div>\r\n        <div className=\"l-handle handle\"></div>\r\n        <div className=\"l-small-handle-block handle-block\"></div>\r\n        <div className=\"l-large-handle-block-curve handle-block-curve\"></div>\r\n        <div className=\"l-blade\">\r\n          <div className=\"l-blade-top blade-top\"></div>\r\n          <div className=\"l-blade-left blade-left\"></div>\r\n          <div className=\"l-blade-right blade-right\"></div>\r\n          <div className=\"l-blade-bottom blade-bottom\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Sword;\r\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nimport NavLinks from './NavLinks/NavLinks';\nimport Sword from '../../../../components/Sword/Sword';\n\nimport logo from '../../../../assets/images/logo1.svg';\nimport styles from './Nav.module.scss';\nimport './Swords-styles.scss';\n\nconst Nav = ({ logout, user, tavernId }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <div className={styles.Nav__Header}>\n      <div className={styles.Nav__Header__Welcome}>\n        <h1>Bienvenue</h1>\n        <h2 className={styles.Nav__Header__Welcome__User}>{user.username}</h2>\n        <span className={styles.Nav__Header__Welcome__Title}>{user.title}</span>\n      </div>\n      <nav className={styles.Nav}>\n        <Link to=\"/\" className={styles.Nav__Logo}>\n          <img src={logo} alt=\"logo TheTavern\" title=\"Retour à l' accueil\" />\n        </Link>\n        <div className={styles.Nav__Menu__Container}>\n          <div\n            onClick={() => setIsOpen(!isOpen)}\n            className={isOpen ? styles.Nav__Menu__Open : styles.Nav__Menu}>\n            <div className=\"sword-menu\">\n              <Sword isOpen={isOpen} />\n              <Sword isOpen={isOpen} />\n              <Sword isOpen={isOpen} />\n            </div>\n          </div>\n          <NavLinks\n            tavernId={tavernId}\n            logout={logout}\n            isOpen={isOpen}\n            setIsOpen={() => setIsOpen(!isOpen)}\n          />\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nNav.propTypes = {\n  logout: PropTypes.func.isRequired,\n};\n\nexport default Nav;\n","import { connect } from 'react-redux';\n\nimport Nav from '../../../sections/TheTavern/components/Nav/Nav';\n\nimport { logout } from '../../../actions';\n\nconst mapStateToProps = (state) => ({\n  user: state.user.loggedUser,\n  tavernId: state.global.tavernId,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  logout: () => dispatch(logout()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);\n","import React from 'react';\nimport video from '../../assets/video/backgroundvideo.mp4';\n\nimport styles from './Video.module.scss';\n\nconst Video = () => {\n  return (\n    <video className={styles.Video} id=\"background-video\" loop autoPlay>\n      <source src={video} type=\"video/mp4\" />\n      <source src={video} type=\"video/ogg\" />\n      Your browser does not support the video tag.\n    </video>\n  );\n};\n\nexport default Video;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Nav from '../../containers/TheTavern/components/Nav';\r\nimport Video from '../Video/Video';\r\n\r\nimport logo from '../../assets/images/logo1.svg';\r\nimport styles from './Layout.module.scss';\r\n\r\nconst Layout = ({ section, children }) => {\r\n  let layout;\r\n\r\n  switch (section) {\r\n    case 'auth':\r\n      layout = (\r\n        <div className={styles.Auth}>\r\n          <header className={styles.Auth__Logo}>\r\n            <img src={logo} alt=\"logo TheTavern\" />\r\n          </header>\r\n          <main className={styles.Auth__Main}>\r\n            {children}\r\n            <Video />\r\n          </main>\r\n          <footer className={styles.Auth__Footer}>© thetavern | Tous droits réservés | 2020</footer>\r\n        </div>\r\n      );\r\n      break;\r\n    // case 'notFound':\r\n    //   layout = (\r\n    //     <div>\r\n    //       <header className={styles.Auth__Logo}>\r\n    //         <img src={logo} alt=\"logo TheTavern\" />\r\n    //       </header>\r\n    //       <main className={styles.Auth__Main}>\r\n    //         {children}\r\n    //         <button>Accueil</button>\r\n    //       </main>\r\n    //       <footer className={styles.Auth__Footer}>© thetavern | Tous droits réservés | 2020</footer>\r\n    //     </div>\r\n    //   );\r\n    //   break;\r\n    case 'admin':\r\n      layout = <main>{children}</main>;\r\n      break;\r\n    default:\r\n      layout = (\r\n        <>\r\n          <div className={styles.Main}>\r\n            <Nav />\r\n            <main className={styles.Main__Main}>{children}</main>\r\n            <footer className={styles.Main__Footer}>\r\n              © thetavern | Tous droits réservés | 2020\r\n            </footer>\r\n          </div>\r\n        </>\r\n      );\r\n      break;\r\n  }\r\n\r\n  return <>{layout}</>;\r\n};\r\n\r\nLayout.propTypes = {\r\n  section: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.arrayOf(PropTypes.node)]),\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\n\r\nimport styles from './Presentation.module.scss';\r\nimport crossSword from '../../../../assets/images/logocroix.svg';\r\nconst Presentation = () => {\r\n  return (\r\n    <div className={styles.Presentation}>\r\n      <p className={styles.Mobile}>Bienvenue dans le premier réseau social dédié au jeu de rôle.</p>\r\n      <p className={styles.Mobile}>\r\n        Créé pour vous, joueur de jeu de rôle débutant ou initié ! Rencontrez de nouveau amis,\r\n        rassemblez vous pour jouer grâce à un système de partage d’écran et surtout racontez vos\r\n        folles aventures.\r\n      </p>\r\n      <div className={styles.Desktop}>\r\n        <h1 className={styles.Desktop__Title}>\r\n          <img className={styles.CrossSwordDesktop} src={crossSword} alt=\"épées entrecroisées\" />\r\n          Bienvenue\r\n        </h1>\r\n        <h2 className={styles.Desktop__SubTitle}>\r\n          dans le premier réseau social dédié au jeu de rôle.\r\n        </h2>\r\n      </div>\r\n      <p className={styles.Desktop__AmbientText}>\r\n        « Le feu crépite dans la cheminée, l’odeur des braises se mélange à celle du vieux bois et\r\n        aux brumes des breuvages servis dans l’établissement. Les discutions vont bon train,\r\n        certains racontent leurs aventures du jour, d’autres se préparent pour un long périple. Pas\r\n        de doutes cette taverne a quelque chose de spécial et vous n’allez pas tarder à le découvrir\r\n        ! »\r\n      </p>\r\n      <p className={styles.Desktop__PresentationText}>\r\n        Créé pour vous, joueur de jeu de rôle débutant ou initié ! Rencontrez de nouveau amis,\r\n        rassemblez vous pour jouer grâce à un système de partage d’écran et surtout racontez vos\r\n        folles aventures.\r\n      </p>\r\n      <p className={styles.Desktop__TavernierText}>\r\n        « Prenez place et mettez-vous à l'aise, il y a toujours une table de libre pour vous. »\r\n      </p>\r\n      <p className={styles.Signature}>Le tavernier</p>\r\n      <img className={styles.CrossSword} src={crossSword} alt=\"épées entrecroisées\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Presentation;\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// import PropTypes from 'prop-types';\r\n\r\nimport Presentation from './Presentation/Presentation';\r\nimport styles from './Home.module.scss';\r\n\r\nimport { websiteName } from '../../../util';\r\n\r\nconst Home = ({ history, match }) => {\r\n  const clickHandler = () => {\r\n    history.push(`${match.path}/connexion`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = `${websiteName} | Authentification`;\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Presentation />\r\n      <div onClick={clickHandler} className={styles.Connexion__Container}>\r\n        <Link to=\"/auth/connexion\" className={styles.Connexion}>\r\n          Connexion\r\n        </Link>\r\n        <div className={styles.Arrow}></div>\r\n        <div></div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getDate } from '../../util';\r\n\r\nconst Field = ({\r\n  type,\r\n  placeholder,\r\n  reducerName,\r\n  name,\r\n  value,\r\n  inputChange,\r\n  cssClass,\r\n  id,\r\n  post,\r\n  hasError,\r\n  unsetError,\r\n}) => {\r\n  let field;\r\n\r\n  const { year, month, day } = getDate();\r\n\r\n  const inputChangeHandler = (event) => {\r\n    inputChange(name, event.target.value, reducerName);\r\n    if (hasError) {\r\n      unsetError();\r\n    }\r\n  };\r\n\r\n  switch (type) {\r\n    case 'textarea':\r\n      field = (\r\n        <textarea\r\n          id={id}\r\n          className={cssClass}\r\n          placeholder={placeholder}\r\n          name={name}\r\n          value={value}\r\n          maxLength={post ? '2000' : '300'}\r\n          onChange={inputChangeHandler}></textarea>\r\n      );\r\n      break;\r\n    case 'password':\r\n      field = (\r\n        <input\r\n          id={id}\r\n          className={cssClass}\r\n          type=\"password\"\r\n          placeholder={placeholder}\r\n          name={name}\r\n          value={value}\r\n          onChange={inputChangeHandler}\r\n        />\r\n      );\r\n      break;\r\n    case 'email':\r\n      field = (\r\n        <input\r\n          id={id}\r\n          className={cssClass}\r\n          type=\"email\"\r\n          placeholder={placeholder}\r\n          name={name}\r\n          value={value}\r\n          onChange={inputChangeHandler}\r\n        />\r\n      );\r\n      break;\r\n    case 'date':\r\n      field = (\r\n        <input\r\n          id={id}\r\n          className={cssClass}\r\n          type=\"date\"\r\n          min={`${year - 80}-01-01`}\r\n          max={`${year - 16}-${month}-${day}`}\r\n          placeholder={placeholder}\r\n          name={name}\r\n          value={value}\r\n          onChange={inputChangeHandler}\r\n        />\r\n      );\r\n      break;\r\n    default:\r\n      field = (\r\n        <input\r\n          id={id}\r\n          type=\"text\"\r\n          className={cssClass}\r\n          placeholder={placeholder}\r\n          name={name}\r\n          value={value}\r\n          onChange={inputChangeHandler}\r\n        />\r\n      );\r\n  }\r\n\r\n  return <>{field}</>;\r\n};\r\n\r\nField.propTypes = {\r\n  type: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  reducerName: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.bool]).isRequired,\r\n  inputChange: PropTypes.func.isRequired,\r\n  cssClass: PropTypes.string,\r\n  id: PropTypes.string,\r\n};\r\n\r\nField.defaultProps = {\r\n  type: 'text',\r\n  placeholder: '',\r\n  cssClass: '',\r\n  id: '',\r\n};\r\n\r\nexport default Field;\r\n","import { connect } from 'react-redux';\r\n\r\nimport Field from '../../components/Field/Field';\r\nimport { inputChange, unsetError } from '../../actions';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  value: state[ownProps.reducerName][ownProps.name],\r\n  hasError: state.global.hasError,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  inputChange: (name, value, reducerName) => dispatch(inputChange(name, value, reducerName)),\r\n  unsetError: () => dispatch(unsetError()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Field);\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './ErrorMessage.module.scss'\nconst ErrorMessage = ({ message, cssClass }) => (\n  <div className={styles.ErrorMessage}>\n    <p>{message}</p>\n  </div>\n);\n\nErrorMessage.propTypes = {\nmessage : PropTypes.string.isRequired,\n};\nexport default ErrorMessage;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport CrossButton from '../../../assets/images/boutoncroix.svg';\nimport Shield from '../../../assets/images/shield.svg';\nimport Field from '../../../containers/components/Field';\nimport ErrorMessage from '../../../components/Error/ErrorMessage';\nimport Presentation from '../Home/Presentation/Presentation';\nimport styles from './Signin.module.scss';\n\nimport { websiteName } from '../../../util';\n\nconst Signin = ({\n  match,\n  history,\n  login,\n  resetFields,\n  isLoggedIn,\n  hasError,\n  unsetError,\n  errorMessage,\n  email,\n  password,\n  setError,\n}) => {\n  useEffect(() => {\n    if (isLoggedIn) {\n      history.push('/');\n      resetFields('auth');\n    }\n  }, [isLoggedIn]);\n\n  useEffect(() => {\n    resetFields('auth');\n    unsetError();\n  }, []);\n\n  const clickHandler = (event) => {\n    history.push('/auth');\n  };\n\n  const signinFormHandler = (event) => {\n    event.preventDefault();\n    if (!email || !password) {\n      return setError('Tous les champs doivent être renseignés', 'all fields', {\n        email: !email && true,\n        password: !password && true,\n      });\n    }\n    unsetError();\n    login();\n  };\n\n  useEffect(() => {\n    document.title = `${websiteName} | Connexion`;\n  }, []);\n\n  return (\n    <>\n      {window.matchMedia('(min-width: 768px)').matches && <Presentation />}\n      <form onSubmit={signinFormHandler} className={styles.Signin}>\n        <img\n          onClick={clickHandler}\n          className={styles.Signin__CrossSword}\n          src={CrossButton}\n          alt=\"bouton de fermeture\"\n        />\n        <div className={styles.Signin__Container}>\n          <label htmlFor=\"email\">Email</label>\n          <Field\n            id=\"email\"\n            reducerName=\"auth\"\n            placeholder=\"exemple@tavern.com\"\n            type=\"email\"\n            name=\"email\"\n            cssClass={\n              hasError\n                ? [styles.Signin__Email, styles.Signin__Field, styles.Signin__Error].join(' ')\n                : [styles.Signin__Email, styles.Signin__Field].join(' ')\n            }\n          />\n          <div className={styles.Password}>\n            <label htmlFor=\"password\">Mot de passe</label>\n            <Link className={styles.Password__Forgotten} to=\"#\">\n              Mot de passe oublié ?\n            </Link>\n          </div>\n          <Field\n            id=\"password\"\n            reducerName=\"auth\"\n            placeholder=\"*****\"\n            type=\"password\"\n            name=\"password\"\n            cssClass={\n              hasError\n                ? [styles.Signin__Password, styles.Signin__Field, styles.Signin__Error].join(' ')\n                : [styles.Signin__Password, styles.Signin__Field].join(' ')\n            }\n          />\n          {hasError && <ErrorMessage message={errorMessage} />}\n          <div className={styles.Signin__Btn__Container}>\n            <Link className={styles.Signin__Signup} to=\"/auth/inscription\">\n              Pas encore inscrit ?\n            </Link>\n            <button className={styles.Signin__Btn}>\n              <img className={styles.Signin__Btn__Shield} src={Shield} alt=\"Bouclier\" />\n              Connexion\n            </button>\n          </div>\n        </div>\n      </form>\n    </>\n  );\n};\n\nSignin.propTypes = {\n  history: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  resetFields: PropTypes.func.isRequired,\n  isLoggedIn: PropTypes.bool.isRequired,\n};\n\nexport default Signin;\n","import { connect } from 'react-redux';\r\n\r\nimport { login, resetFields, unsetError, setError } from '../../actions';\r\n\r\nimport Signin from '../../sections/Auth/Signin/Signin';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.user.isLoggedIn,\r\n  hasError: state.global.hasError,\r\n  errorMessage: state.global.errorMessage,\r\n  email: state.auth.email,\r\n  password: state.auth.password,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  login: () => dispatch(login()),\r\n  resetFields: () => dispatch(resetFields('auth')),\r\n  unsetError: () => dispatch(unsetError()),\r\n  setError: (errorMessage, errorType, data) => dispatch(setError(errorMessage, errorType, data))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as EmailValidator from 'email-validator';\r\n\r\nimport Field from '../../../containers/components/Field';\r\nimport CrossButton from '../../../assets/images/boutoncroix.svg';\r\nimport Scroll from '../../../assets/images/scroll.svg';\r\nimport Presentation from '../Home/Presentation/Presentation';\r\nimport styles from './Signup.module.scss';\r\nimport ErrorMessage from '../../../components/Error/ErrorMessage';\r\n\r\nimport { websiteName } from '../../../util';\r\n\r\nconst Signup = ({\r\n  history,\r\n  signup,\r\n  resetFields,\r\n  hasError,\r\n  unsetError,\r\n  errorMessage,\r\n  resolve,\r\n  isResolve,\r\n  email,\r\n  username,\r\n  birthdate,\r\n  password,\r\n  confirmPassword,\r\n  setError,\r\n}) => {\r\n  useEffect(() => {\r\n    if (resolve) {\r\n      history.push(`/auth/connexion`);\r\n      isResolve();\r\n    }\r\n  }, [resolve, hasError]);\r\n\r\n  useEffect(() => {\r\n    unsetError();\r\n    resetFields('auth');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    document.title = `${websiteName} | Inscription`;\r\n  }, []);\r\n\r\n  const clickHandler = () => {\r\n    history.push('/auth');\r\n    resetFields('auth');\r\n  };\r\n\r\n  const signupFormHandler = async (event) => {\r\n    event.preventDefault();\r\n    if (!email || !username || !birthdate || !password || !confirmPassword) {\r\n      return setError('Tous les champs doivent être renseignés', 'all fields', {\r\n        email: !email && true,\r\n        username: !username && true,\r\n        birthdate: !birthdate && true,\r\n        password: !password && true,\r\n        confirmPassword: !confirmPassword && true,\r\n      });\r\n    } else if (!EmailValidator.validate(email)) {\r\n      return setError(\"L'email doit être un email valide\", 'email');\r\n    } else if (username.length > 12) {\r\n      return setError('Le pseudo ne doit pas excéder 12 caractères', 'username too long');\r\n    } else if (password !== confirmPassword) {\r\n      return setError('Les mots de passe doivent être identiques', 'password not matching');\r\n    } else if (password) {\r\n      const hasUpperCase = /[A-Z]/.test(password);\r\n      const hasLowerCase = /[a-z]/.test(password);\r\n      const hasNumbers = /\\d/.test(password);\r\n      const hasNonalphas = /\\W/.test(password);\r\n      if (!hasUpperCase || !hasLowerCase || !hasNumbers || !hasNonalphas || password.length < 8) {\r\n        return setError(\r\n          'Le mot de passe doit contenir au moins 8 caractères, 1 majuscule, 1 minuscule, 1 chiffre et 1 caractère spécial',\r\n          'invalid password',\r\n        );\r\n      }\r\n    }\r\n    signup();\r\n    resetFields('auth');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {window.matchMedia('(min-width: 768px)').matches && <Presentation />}\r\n      <form onSubmit={signupFormHandler} className={styles.Signup}>\r\n        <img\r\n          onClick={clickHandler}\r\n          alt=\"bouton de fermeture\"\r\n          className={styles.Signup__CrossSword}\r\n          src={CrossButton}\r\n        />\r\n        <div className={styles.Signup__Container}>\r\n          <label htmlFor=\"email\">Email</label>\r\n          <Field\r\n            id=\"email\"\r\n            cssClass={\r\n              hasError.email\r\n                ? [styles.Signup__Field, styles.Signup__Email, styles.Signup__HasError].join(' ')\r\n                : [styles.Signup__Field, styles.Signup__Email].join(' ')\r\n            }\r\n            reducerName=\"auth\"\r\n            placeholder=\"exemple@tavern.com\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n          />\r\n          <label htmlFor=\"username\">Pseudo</label>\r\n          <Field\r\n            id=\"username\"\r\n            cssClass={\r\n              hasError.username\r\n                ? [styles.Signup__Field, styles.Signup__Username, styles.Signup__HasError].join(' ')\r\n                : [styles.Signup__Field, styles.Signup__Username].join(' ')\r\n            }\r\n            reducerName=\"auth\"\r\n            placeholder=\"12 caractères max\"\r\n            name=\"username\"\r\n          />\r\n          <label htmlFor=\"birthdate\">Date de naissance</label>\r\n          <Field\r\n            id=\"birthdate\"\r\n            cssClass={\r\n              hasError.birthdate\r\n                ? [styles.Signup__Field, styles.Signup__Birthdate, styles.Signup__HasError].join(\r\n                    ' ',\r\n                  )\r\n                : [styles.Signup__Field, styles.Signup__Birthdate].join(' ')\r\n            }\r\n            reducerName=\"auth\"\r\n            type=\"date\"\r\n            name=\"birthdate\"\r\n          />\r\n          <label htmlFor=\"password\">Mot de passe</label>\r\n          <Field\r\n            id=\"password\"\r\n            cssClass={\r\n              hasError.password\r\n                ? [styles.Signup__Field, styles.Signup__Password, styles.Signup__HasError].join(' ')\r\n                : [styles.Signup__Field, styles.Signup__Password].join(' ')\r\n            }\r\n            reducerName=\"auth\"\r\n            placeholder=\"*****\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n          />\r\n          <label htmlFor=\"confirm-password\">Confirmation mot de passe</label>\r\n          <Field\r\n            id=\"confirm-password\"\r\n            cssClass={\r\n              hasError.confirmPassword\r\n                ? [styles.Signup__Field, styles.Signup__Password, styles.Signup__HasError].join(' ')\r\n                : [styles.Signup__Field, styles.Signup__ConfirmPassword].join(' ')\r\n            }\r\n            reducerName=\"auth\"\r\n            placeholder=\"*****\"\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n          />\r\n          {hasError && <ErrorMessage message={errorMessage} />}\r\n          <button className={styles.Signup__Btn}>\r\n            <img className={styles.Signup__Btn__Scroll} src={Scroll} alt=\"parchemin\" />\r\n            S'inscrire\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nSignup.propTypes = {\r\n  signup: PropTypes.func.isRequired,\r\n  resetFields: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Signup;\r\n","import { connect } from 'react-redux';\r\n\r\nimport { signup, resetFields, unsetError, isResolve, setError } from '../../actions';\r\n\r\nimport Signup from '../../sections/Auth/Signup/Signup';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.user.isLoggedIn,\r\n  hasError: state.global.hasError,\r\n  errorMessage: state.global.errorMessage,\r\n  resolve: state.global.isResolve,\r\n  email: state.auth.email,\r\n  username: state.auth.username,\r\n  birthdate: state.auth.birthdate,\r\n  password: state.auth.password,\r\n  confirmPassword: state.auth.confirmPassword,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signup: () => dispatch(signup()),\r\n  resetFields: () => dispatch(resetFields('auth')),\r\n  unsetError: () => dispatch(unsetError()),\r\n  isResolve: () => dispatch(isResolve()),\r\n  setError:(message, errorType, data) => dispatch(setError(message, errorType, data)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\r\n","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Layout from '../../components/Layout/Layout';\r\nimport Home from '../../sections/Auth/Home/Home';\r\nimport Signin from '../../containers/Auth/Signin';\r\nimport Signup from '../../containers/Auth/Signup';\r\n\r\nconst Auth = ({ match }) => {\r\n  return (\r\n    <>\r\n      <Layout section=\"auth\">\r\n        <Switch>\r\n          <Route exact path={`${match.path}`} component={Home} />\r\n          <Route path={`${match.path}/connexion`} component={Signin} />\r\n          <Route path={`${match.path}/inscription`} component={Signup} />\r\n        </Switch>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\n// Auth.propTypes = {};\r\n\r\nexport default Auth;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from '../ContactList.module.scss';\r\n\r\nconst ContactListItem = ({ contact, match, inviteIntoTavern, connectedContacts, connection }) => {\r\n  const updatedContact = { ...contact, isInvitable: true };\r\n\r\n  for (const connectedContact of connectedContacts) {\r\n    if (+connectedContact.id === +contact.id) {\r\n      updatedContact.isInvitable = false;\r\n    }\r\n  }\r\n\r\n  const isInvited = updatedContact.tavernRequests.find(\r\n    (tavernRequest) => +tavernRequest.gamemaster_id === +connection.extra.user.id,\r\n  );\r\n\r\n  const inviteHandler = (id) => {\r\n    inviteIntoTavern(+id, match.params.id);\r\n  };\r\n\r\n  return (\r\n    <li className={styles.ContactList__List__Item} key={updatedContact.id}>\r\n      <img\r\n        className={styles.ContactList__List__Item__Avatar}\r\n        src={updatedContact.avatar}\r\n        alt={`Avatar de ${updatedContact.username}`}\r\n      />\r\n      <p className={styles.ContactList__List__Item__Content}>{updatedContact.username}</p>\r\n      {updatedContact.isInvitable && (\r\n        <button\r\n          disabled={isInvited}\r\n          className={\r\n            isInvited\r\n              ? styles.ContactList__List__Item__Btn__Invited\r\n              : styles.ContactList__List__Item__Btn\r\n          }\r\n          onClick={() => inviteHandler(+updatedContact.id)}>\r\n          {isInvited ? 'Invité' : 'Inviter'}\r\n        </button>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n  match: PropTypes.object.isRequired,\r\n  inviteIntoTavern: PropTypes.func.isRequired,\r\n  connectedContact: PropTypes.shape({\r\n    username: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  connection: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './ContactList.module.scss';\nimport ContactListItem from './ContactListItem/ContactListItem';\n\nconst ContactList = ({ connection, inviteIntoTavern, match, connectedContacts }) => {\n  const userContacts = connection.extra.user.contacts;\n\n  return (\n    <>\n      <div className={styles.AddPlayerContainer}>\n        <div className={styles.AddPalyerContainer__ContactList}>\n          <ul className={styles.ContactList__List}>\n            {userContacts &&\n              userContacts.map((contact) => (\n                <ContactListItem\n                  key={contact.id}\n                  contact={contact}\n                  inviteIntoTavern={inviteIntoTavern}\n                  match={match}\n                  connection={connection}\n                  connectedContacts={connectedContacts}\n                />\n              ))}\n          </ul>\n        </div>\n      </div>\n    </>\n  );\n};\n\nContactList.propTypes = {\n  connection: PropTypes.object.isRequired,\n  inviteIntoTavern: PropTypes.func.isRequired,\n  match: PropTypes.object.isRequired,\n  connectedContacts: PropTypes.array.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Dice.module.scss';\r\nimport d4 from '../../../../../assets/images/dices/d4.svg';\r\nimport d6 from '../../../../../assets/images/dices/d6.svg';\r\nimport d8 from '../../../../../assets/images/dices/d8.svg';\r\nimport d10 from '../../../../../assets/images/dices/d10.svg';\r\nimport d12 from '../../../../../assets/images/dices/d12.svg';\r\nimport d20 from '../../../../../assets/images/dices/d20.svg';\r\n\r\nconst Dice = ({ value, update }) => {\r\n  let diceImg;\r\n\r\n  switch (value) {\r\n    case 4:\r\n      diceImg = d4;\r\n      break;\r\n    case 6:\r\n      diceImg = d6;\r\n      break;\r\n    case 8:\r\n      diceImg = d8;\r\n      break;\r\n    case 10:\r\n      diceImg = d10;\r\n      break;\r\n    case 12:\r\n      diceImg = d12;\r\n      break;\r\n    case 20:\r\n      diceImg = d20;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  const clickHandler = () => {\r\n    update(value);\r\n  };\r\n\r\n  return (\r\n    <div title={`dé de ${value}`} className={styles.Dice}>\r\n      <img src={diceImg} onClick={clickHandler} alt={`dé de ${value}`} />\r\n      <span>d{value}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nDice.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  update: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Dice;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Multiplier.module.scss';\r\n\r\nconst Multiplier = ({ update }) => {\r\n  return (\r\n    <input\r\n      className={styles.Multiplier}\r\n      type=\"number\"\r\n      pattern=\"[0-9]*\"\r\n      min=\"1\"\r\n      max=\"10\"\r\n      placeholder=\"1\"\r\n      onChange={update}\r\n    />\r\n  );\r\n};\r\n\r\nMultiplier.propTypes = {};\r\n\r\nexport default Multiplier;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Dice from './Dice/Dice';\r\nimport Multiplier from './Multiplier/Multiplier';\r\nimport Result from './Result/Result';\r\n\r\nimport styles from './DiceRoller.module.scss';\r\nimport { addChatMessage } from '../../../../actions';\r\n\r\nconst DiceRoller = ({ setDicesValue, setRolledDices, user, connection, addChatMessage }) => {\r\n  const [multiplier, setMultiplier] = useState(1);\r\n  // const [result, setResult] = useState(0);\r\n  const [dices, setDices] = useState([4, 6, 8, 10, 12, 20]);\r\n\r\n  const changeMultiplier = (event) => {\r\n    if (+event.target.value > 10 || +event.target.value < 1) {\r\n      return;\r\n    }\r\n    setMultiplier(event.target.value);\r\n  };\r\n  const calculateTotal = (value) => {\r\n    let multiplierNumber = +multiplier;\r\n    let newResult = 0;\r\n    let random = () => {\r\n      return Math.floor(Math.random() * value) + 1;\r\n    };\r\n\r\n    for (let i = 0; i < multiplierNumber; i++) {\r\n      newResult += random();\r\n    }\r\n\r\n    // setResult(newResult);\r\n    setRolledDices(multiplierNumber);\r\n    setDicesValue(newResult);\r\n    addChatMessage({\r\n      message: `${user.username} a lancé ${multiplierNumber} dé${\r\n        multiplierNumber > 1 ? 's' : ''\r\n      } de ${value} et a obtenu ${newResult}`,\r\n    });\r\n    connection.send({\r\n      type: 'diceRoll',\r\n      message: `${user.username} a lancé ${multiplierNumber} dé${\r\n        multiplierNumber > 1 ? 's' : ''\r\n      } de ${value} et a obtenu ${newResult}`,\r\n    });\r\n  };\r\n  return (\r\n    <div className={styles.DiceRoller}>\r\n      <div className={styles.DiceRoller__Multiplier__Container}>\r\n        <p className={styles.DiceRoller__Multiplier}>\r\n          Nombre de dés\r\n          <Multiplier value={multiplier} update={changeMultiplier} />\r\n        </p>\r\n        <div className={styles.DiceRoller__Dice__Container}>\r\n          {dices.map((dice) => (\r\n            <Dice value={dice} update={calculateTotal} />\r\n          ))}\r\n        </div>\r\n        {/* <div className={styles.DiceRoller__Result__Container}>\r\n          <h1 className={styles.DiceRoller__Result}>Résultat</h1>\r\n          <Result result={result} />\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nDiceRoller.propTypes = {};\r\n\r\nexport default DiceRoller;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport ContactList from '../ContactList/ContactList';\r\nimport DiceRoller from '../DiceRoller/DiceRoller';\r\n\r\nimport door from '../../../../../src/assets/images/door.svg';\r\nimport logo from '../../../../../src/assets/images/logo1.svg';\r\nimport rtcConfig from '../../../../util/rtc';\r\nimport styles from './ScreenShare.module.scss';\r\nimport d20 from '../../../../assets/images/d20.svg';\r\nimport addplayer from '../../../../assets/images/addplayer.svg';\r\nconst Screen = ({\r\n  connection,\r\n  history,\r\n  match,\r\n  resetChat,\r\n  connectedContacts,\r\n  inviteIntoTavern,\r\n  deleteTavern,\r\n  setDicesValue,\r\n  setRolledDices,\r\n  user,\r\n  addChatMessage,\r\n  clearConnectedContactsList,\r\n}) => {\r\n  const [contactListOpen, setContactListOpen] = useState(false);\r\n  const [areDicesShown, setAreDicesShown] = useState(false);\r\n  const videoStream = useRef(null);\r\n\r\n  useEffect(() => {\r\n    rtcConfig(connection, videoStream);\r\n    connection.onMediaError = (error) => {\r\n      deleteTavern(match.params.id);\r\n      connection.closeSocket();\r\n      history.push('/');\r\n    };\r\n  }, [connection]);\r\n\r\n  const clickHandler = (event) => {\r\n    if (connection.extra.user.isGamemaster) {\r\n      for (const contact of connection.extra.user.contacts) {\r\n        contact.tavernRequests.forEach((tavernRequest) => {\r\n          if (+tavernRequest.gamemaster_id === +connection.extra.user.id)\r\n            deleteTavern(match.params.id, connection.extra.user, contact);\r\n        });\r\n      }\r\n    }\r\n\r\n    connection.closeSocket();\r\n    resetChat();\r\n    clearConnectedContactsList();\r\n    history.replace('/');\r\n  };\r\n\r\n  return (\r\n    <div className={styles.ScreenContainer} ref={videoStream}>\r\n      <img className={styles.ScreenContainer__Logo} src={logo} alt=\"logo\" />\r\n      <div className={styles.ScreenContainer__Icons}>\r\n        <img\r\n          onClick={() => setAreDicesShown(!areDicesShown)}\r\n          className={styles.ScreenContainer__Icons__D20}\r\n          src={d20}\r\n          alt=\"d20\"\r\n        />\r\n        {areDicesShown && (\r\n          <DiceRoller\r\n            addChatMessage={addChatMessage}\r\n            user={user}\r\n            connection={connection}\r\n            setDicesValue={setDicesValue}\r\n            setRolledDices={setRolledDices}\r\n          />\r\n        )}\r\n\r\n        <img\r\n          title=\"Liste des Contacts\"\r\n          className={styles.ScreenContainer__Icons__AddPlayer}\r\n          onClick={() => setContactListOpen(!contactListOpen)}\r\n          src={addplayer}\r\n          alt=\"Add PLayer\"\r\n        />\r\n        <img\r\n          src={door}\r\n          className={styles.ScreenContainer__Icons__Exit}\r\n          alt=\"door\"\r\n          title=\"Quitter la tavern\"\r\n          onClick={clickHandler}\r\n        />\r\n        {contactListOpen ? (\r\n          connectedContacts.find((contact) => contact.isGamemaster) ? (\r\n            <ContactList\r\n              connectedContacts={connectedContacts}\r\n              connection={connection}\r\n              match={match}\r\n              inviteIntoTavern={inviteIntoTavern}\r\n            />\r\n          ) : null\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Screen;\r\n","export default (connection, videoStreamContainer) => {\r\n  // Socket URL\r\n  connection.socketURL = 'http://localhost:8080/';\r\n  connection.videosContainer = videoStreamContainer;\r\n\r\n  connection.socketMessageEvent = 'screen-sharing';\r\n\r\n  connection.session = {\r\n    screen: true,\r\n    audio: true,\r\n    data: true,\r\n  };\r\n\r\n  connection.language = 'fr';\r\n\r\n  connection.maxParticipantsAllowed = 8;\r\n\r\n  connection.iceServers = [\r\n    {\r\n      urls: [\r\n        'stun:stun.l.google.com:19302',\r\n        'stun:stun1.l.google.com:19302',\r\n        'stun:stun2.l.google.com:19302',\r\n        'stun:stun.l.google.com:19302?transport=udp',\r\n      ],\r\n    },\r\n  ];\r\n\r\n  // Default room\r\n  connection.channel = 'tavern';\r\n\r\n  // Audio capture\r\n  // if (navigator.getUserMedia) {\r\n  //   connection.captureUserMedia(() => {}, {\r\n  //     audio: true,\r\n  //   });\r\n  // }\r\n\r\n  // Set this line to close room as soon as owner leaves\r\n  connection.autoCloseEntireSession = false;\r\n\r\n  // Event triggered when the stream starts\r\n  connection.onstream = (event) => {\r\n    if (connection.isInitiator && event.type === 'remote') {\r\n      event.stream.mute();\r\n    }\r\n\r\n    if (event.mediaElement.nodeName === 'VIDEO') {\r\n      event.mediaElement.style.width = '100%';\r\n      event.mediaElement.style.height = '100%';\r\n      videoStreamContainer.current.append(event.mediaElement);\r\n    }\r\n  };\r\n\r\n  \r\n};\r\n","import React, { useEffect, useRef } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Field from '../../../../containers/components/Field';\r\nimport styles from './Chat.module.scss';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nconst Chat = ({ connection, message, messages, addChatMessage, resetFields, user }) => {\r\n  const messagesContainer = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const container = messagesContainer.current;\r\n    container.scrollTop = container.scrollHeight;\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    connection.onmessage = (event) => {\r\n      event.extra.user = user;\r\n\r\n      if (event.data.type === 'message') {\r\n        addChatMessage({ message: event.data.message, user: event.data.user });\r\n      } else if (event.data.type === 'diceRoll') {\r\n        addChatMessage({ message: event.data.message });\r\n      }\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleEnter = (event) => {\r\n    if (event.keyCode === 13) {\r\n      if (!event.shiftKey) {\r\n        addChatMessage({ message: message, user: checkInitiator(user) });\r\n        connection.send({ type: 'message', message: message, user: checkInitiator(user) });\r\n        resetFields('tavern');\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkInitiator = (user) =>\r\n    connection.isInitiator ? { ...user, username: `${user.username} / GameMaster` } : user;\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    if (!message) {\r\n      return;\r\n    }\r\n\r\n    addChatMessage({ message, user: checkInitiator(user) });\r\n    connection.send({ type: 'message', message, user: checkInitiator(user) });\r\n    resetFields('tavern');\r\n  };\r\n\r\n  return (\r\n    <div className={styles.Chat}>\r\n      <div className={styles.Chat__Messages} ref={messagesContainer}>\r\n        <div className={styles.Chat__Messages__Message}>\r\n          <p className={styles.Chat__Messages__Message__Player}>Le Tavernier</p>\r\n          <p className={styles.Chat__Messages__Message__Content}>\r\n            Bienvenue dans la Tavern ! Preparez vous à embarquer dans une aventure fantastique !\r\n          </p>\r\n        </div>\r\n        {messages.map((message) => (\r\n          <div key={uuidv4()} className={styles.Chat__Messages__Message}>\r\n            {message.user && (\r\n              <p\r\n                className={\r\n                  message.user.isGamemaster &&\r\n                  message.user.username === `${user.username} / GameMaster`\r\n                    ? styles.Chat__Messages__Message__Gamemaster__Self\r\n                    : message.user.isGamemaster\r\n                    ? styles.Chat__Messages__Message__Gamemaster\r\n                    : message.user.username === user.username\r\n                    ? styles.Chat__Messages__Message__Self\r\n                    : styles.Chat__Messages__Message__Player\r\n                }>\r\n                {message.user.username}\r\n              </p>\r\n            )}\r\n            <pre\r\n              className={\r\n                message.user\r\n                  ? styles.Chat__Messages__Message__Content\r\n                  : styles.Chat__Messages__DiceRoll\r\n              }>\r\n              {message.message}\r\n            </pre>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form className={styles.Chat__Message__Form} onKeyUp={handleEnter} onSubmit={submitHandler}>\r\n        <Field\r\n          type=\"textarea\"\r\n          cssClass={styles.Chat__Message__Input}\r\n          reducerName=\"tavern\"\r\n          name=\"message\"\r\n        />\r\n        <button className={styles.Chat__Message__Form__Btn}>Envoyer</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nChat.propTypes = {\r\n  connection: PropTypes.object.isRequired,\r\n  message: PropTypes.string.isRequired,\r\n  messages: PropTypes.array.isRequired,\r\n  addChatMessage: PropTypes.func.isRequired,\r\n  resetFields: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Chat;\r\n","import { connect } from 'react-redux';\r\n\r\nimport Chat from '../../../sections/TheTavern/Tavern/Chat/Chat';\r\nimport { addChatMessage, resetFields } from '../../../actions';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  message: state.tavern.message,\r\n  messages: state.tavern.messages,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addChatMessage: (message) => dispatch(addChatMessage(message)),\r\n  resetFields: (reducer) => dispatch(resetFields(reducer)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './ConnectedContactsList.module.scss';\n\nconst ConnectedContactsList = ({ connectedContacts, user }) => {\n  return (\n    <div className={styles.ConnectedContactsList}>\n      <ul className={styles.ConnectedContactsList__List}>\n        {!user.isGamemaster && (\n          <li className={styles.ConnectedContactsList__List__Item} key={user.id}>\n            <img\n              title={user.username}\n              className={styles.ConnectedContactsList__List__Avatar}\n              src={user.avatar}\n              alt={`Avatar de ${user.username}`}\n            />\n          </li>\n        )}\n\n        {connectedContacts.map((contact) =>\n          (contact.isGamemaster && contact.id === user.id) || contact.isGamemaster ? null : (\n            <li className={styles.ConnectedContactsList__List__Item} key={contact.id}>\n              <img\n                title={contact.username}\n                className={styles.ConnectedContactsList__List__Avatar}\n                src={contact.avatar}\n                alt={`Avatar de ${contact.username}`}\n              />\n            </li>\n          ),\n        )}\n      </ul>\n    </div>\n  );\n};\n\nConnectedContactsList.propTypes = {\n  connectedContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      username: PropTypes.string.isRequired,\n      avatar: PropTypes.string.isRequired,\n      isGamemaster: PropTypes.bool.isRequired,\n    }),\n  ).isRequired,\n  user: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    username: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n    isGamemaster: PropTypes.bool.isRequired,\n  }),\n};\n\nexport default ConnectedContactsList;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react';\nimport RTCMultiConnection from 'rtcmulticonnection';\n\nimport ScreenShare from './ScreenShare/ScreenShare';\nimport Chat from '../../../containers/TheTavern/Tavern/Chat';\nimport ConnectedContactsList from './ConnectedContactsList/ConnectedContactsList';\n\nimport { websiteName } from '../../../util';\nimport styles from './Tavern.module.scss';\n\nconst Tavern = ({\n  match,\n  history,\n  user,\n  resetChat,\n  setTavernId,\n  connectedContacts,\n  tavernContactConnect,\n  tavernContactDisconnect,\n  inviteContact,\n  openTavern,\n  deleteTavern,\n  addChatMessage,\n  clearConnectedContactsList,\n}) => {\n  const [connection] = useState(new RTCMultiConnection());\n  const [userHasJoined, setUserHasJoined] = useState(false);\n\n  const [rolledDices, setRolledDices] = useState(1);\n  const [dicesValue, setDicesValue] = useState(1);\n\n  useEffect(() => {\n    document.title = `${websiteName} | Tavern`;\n  }, []);\n\n  useEffect(() => {\n    setTavernId(match.params.id);\n  }, []);\n\n  useEffect(() => {\n    connection.checkPresence(match.params.id, (isRoomExist, roomid) => {\n      if (isRoomExist === true) {\n        connection.dontCaptureUserMedia = true;\n        connection.extra.user = { ...user, isGamemaster: false };\n        connection.join(roomid);\n        setUserHasJoined(true);\n      } else {\n        connection.extra.user = { ...user, isGamemaster: true };\n        connection.open(roomid);\n        openTavern(connection.isInitiator);\n        tavernContactConnect(connection.extra.user);\n        setUserHasJoined(true);\n      }\n    });\n\n    connection.onopen = (event) => {\n      const userToConnect = event.extra.user;\n      userToConnect.connectionUserId = event.userid;\n      tavernContactConnect(userToConnect);\n    };\n\n    connection.onclose = (event) => {\n      tavernContactDisconnect(event.userid);\n    };\n\n    // Event triggered when the stream ends\n    connection.onstreamended = (event) => {\n      // deleteTavern(match.params.id);\n      if (event.userid === connection.userid) {\n        // disconnect with all users\n        connection.getAllParticipants().forEach((pid) => {\n          connection.disconnectWith(pid);\n        });\n        // Closes the connection\n        connection.closeSocket();\n      }\n    };\n\n    return () => {\n      // stop all local cameras\n      connection.attachStreams.forEach((stream) => stream.stop());\n    };\n  }, []);\n\n  return (\n    <div className={styles.Tavern}>\n      <ScreenShare\n        resetChat={resetChat}\n        match={match}\n        history={history}\n        user={user}\n        addChatMessage={addChatMessage}\n        connection={connection}\n        connectedContacts={connectedContacts}\n        deleteTavern={deleteTavern}\n        inviteIntoTavern={inviteContact}\n        setDicesValue={setDicesValue}\n        setRolledDices={setRolledDices}\n        clearConnectedContactsList={clearConnectedContactsList}\n      />\n      <div className={styles.Tavern__Chat__Container}>\n        {userHasJoined && (\n          <div className={styles.ContactListMoreSelf}>\n            <div>\n              <p>\n                {connectedContacts.map((contact) =>\n                  contact.isGamemaster ? (\n                    <img\n                      key={contact.id}\n                      title={contact.username}\n                      className={styles.Tavern__Avatar}\n                      src={contact.avatar}\n                      alt={`Avatar de ${contact.username}`}\n                    />\n                  ) : null,\n                )}\n              </p>\n            </div>\n            <ConnectedContactsList connectedContacts={connectedContacts} user={user} />\n          </div>\n        )}\n        <Chat\n          user={user}\n          tavernId={match.params.id}\n          connectedContacts={connectedContacts}\n          connection={connection}\n          rolledDices={rolledDices}\n          dicesValue={dicesValue}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Tavern;\n","import { connect } from 'react-redux';\r\n\r\nimport Tavern from '../../../sections/TheTavern/Tavern/Tavern';\r\n\r\nimport {\r\n  resetChat,\r\n  setTavernId,\r\n  tavernContactConnect,\r\n  tavernContactDisconnect,\r\n  inviteContact,\r\n  openTavern,\r\n  deleteTavern,\r\n  addChatMessage,\r\n  clearConnectedContactsList,\r\n} from '../../../actions';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user.loggedUser,\r\n  connectedContacts: state.tavern.connectedContacts,\r\n  isInitiator: state.tavern.isInitiator,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  resetChat: () => dispatch(resetChat()),\r\n  setTavernId: (tavernId) => dispatch(setTavernId(tavernId)),\r\n  tavernContactConnect: (user) => dispatch(tavernContactConnect(user)),\r\n  tavernContactDisconnect: (userId) => dispatch(tavernContactDisconnect(userId)),\r\n  inviteContact: (contactId, tavernId) => dispatch(inviteContact(contactId, tavernId)),\r\n  openTavern: (isInitiator) => dispatch(openTavern(isInitiator)),\r\n  deleteTavern: (tavernId) => dispatch(deleteTavern(tavernId)),\r\n  addChatMessage: (message) => dispatch(addChatMessage(message)),\r\n  clearConnectedContactsList: () => dispatch(clearConnectedContactsList()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tavern);\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './AvatarItem.module.scss';\n\nconst AvatarItem = ({ avatarImage, updateAvatar, avatar, submit }) => {\n  return (\n    <div className={styles.avatarCase} onClick={() => updateAvatar(avatarImage)}>\n      <input className={styles.radio}\n        type=\"radio\"\n        value={avatarImage}\n        checked={avatar === avatarImage}\n        readOnly\n        name=\"avatarRadio\"\n      />\n      <img src={avatarImage} alt={avatarImage} className={avatar === avatarImage ? styles.Highlighted : ''} onDoubleClick={submit} />\n    </div>\n  );\n};\n\nAvatarItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  avatarImage: PropTypes.string.isRequired,\n  updateAvatar: PropTypes.func.isRequired,\n};\nexport default AvatarItem;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from './Backdrop.module.scss';\r\n\r\nconst Backdrop = ({ clicked }) => <div onClick={clicked} className={classes.Backdrop}></div>;\r\n\r\nBackdrop.propTypes = {\r\n  clicked: PropTypes.func,\r\n};\r\n\r\nBackdrop.defaultProps = {\r\n  clicked: () => '',\r\n};\r\n\r\nexport default Backdrop;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './AvatarsList.module.scss';\nimport AvatarItem from './AvatarItem/AvatarItem';\nimport cross from '../../../../assets/images/boutoncroix.svg';\nimport Backdrop from '../../../../components/Backdrop/Backdrop'\n\nconst AvatarsList = ({ modalCancel, avatar, avatarImages, updateAvatar, updateImage }) => {\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    updateImage(avatar);\n    modalCancel();\n  };\n\n  return (\n\n    <>\n      <Backdrop clicked={modalCancel}/>\n      <div className={styles.Modal}>\n        <div className={styles.Header}>\n          <p>Faites votre choix parmis les avatars ci dessous!</p>\n        </div>\n        <div className={styles.Modal__Closebtn} onClick={modalCancel}>\n          <img src={cross} alt=\"Bouton Fermeture\" />\n        </div>\n        <form className={styles.AvatarLists} onSubmit={handleSubmit}>\n          <div className={styles.AvatarLists__Container} >\n            {avatarImages.map((avatarImage) => (\n              <AvatarItem\n                key={avatarImage}\n                avatarImage={avatarImage}\n                avatar={avatar}\n                updateAvatar={(avatar) => updateAvatar(avatar)}\n                submit={handleSubmit}\n              />\n            ))}\n          </div>\n          <button className={styles.AvatarLists__Valider} >Valider</button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nAvatarsList.propTypes = {\n  updateAvatar: PropTypes.func.isRequired,\n  modalCancel: PropTypes.func.isRequired,\n  avatarImages: PropTypes.array.isRequired,\n  avatar: PropTypes.string.isRequired,\n};\nexport default AvatarsList;\n","import { connect } from 'react-redux';\n\nimport AvatarsList from '../../../../sections/TheTavern/UserAccount/AvatarsList/AvatarsList';\n\nimport { updateAvatar, updateImage } from '../../../../actions';\n\nconst mapStateToProps = (state) => ({\n    avatar: state.user.avatar,\n});\nconst mapDispatchToProps = (dispatch) => ({\n    updateAvatar: (avatar) => dispatch(updateAvatar(avatar)),\n    updateImage: (avatar, user) => dispatch(updateImage(avatar, user)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AvatarsList);\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport goblin from '../../assets/images/goblin.gif'\r\nimport classes from './Modal.module.scss';\r\n\r\nconst Modal = ({ header, message, modalConfirm, modalCancel }) => (\r\n  <>\r\n    <Backdrop clicked={modalCancel} />\r\n    <div className={classes.Modal}>\r\n      <header>\r\n      <img\r\n          className={classes.Modal__goblin}\r\n          src={goblin}\r\n          alt=\"goblin\"\r\n        />\r\n      {header}\r\n      </header>\r\n      <p>{message}</p>\r\n      {modalConfirm && (\r\n        <div className={classes.Buttons__Container}>\r\n          <button onClick={modalCancel}>Annuler</button>\r\n          <button onClick={modalConfirm}>Confirmer</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  </>\r\n);\r\n\r\nModal.propTypes = {\r\n  header: PropTypes.string,\r\n  message: PropTypes.string.isRequired,\r\n  modalConfirm: PropTypes.func.isRequired,\r\n  modalCancel: PropTypes.func.isRequired,\r\n};\r\n\r\nModal.defaultProps = {\r\n  header: '',\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Contact.module.scss';\n\nimport Modal from '../../../../components/Modal/Modal';\n\nconst Contact = ({ contact, deleteContact }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  return (\n    <>\n      <li className={styles.Contact_Content_Container}>\n        <img className={styles.Contact_Image} src={contact.avatar} alt={`avatar de ${contact.username}`} title={contact.description} />\n        <span className={styles.Contact_Content}>{contact.username}</span>\n        <span className={styles.Contact_Title}>{contact.title}</span>\n        <button onClick={() => setIsModalOpen(true)} className={styles.Contact_Btn}>\n          X\n        </button>\n      </li>\n      {isModalOpen && (\n        <Modal\n          modalConfirm={() => deleteContact(contact.id)}\n          modalCancel={() => setIsModalOpen(false)}\n          header=\"Suppression de contact\"\n          message={`Voulez vous vraiment supprimer \"${contact.username}\" de votre liste?`}\n        />\n      )}\n    </>\n  );\n};\n\nContact.propTypes = {\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Title.module.scss';\n\nconst Title = React.forwardRef(({ name, selectTitle }, ref) => {\n  return (\n    <li ref={ref} className={styles.Title} onClick={selectTitle}>\n      {name}\n    </li>\n  );\n});\n\nTitle.propTypes = {\n  name: PropTypes.string.isRequired,\n  selectTitle: PropTypes.func.isRequired,\n};\n\nexport default Title;\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Title from './Title/Title';\n\nimport styles from './Titles.module.scss';\n\nconst Titles = ({ show, defaultTitles, updateTitle }) => {\n  const list = useRef(null);\n  const listItems = defaultTitles.map((title) => (\n    <Title key={title} show={show} selectTitle={() => clickHandler(title)} name={title} />\n  ));\n\n  const clickAway = (event) => {\n    const keys = listItems.map((item) => item.key);\n    if (!keys.includes(event.target.textContent) && event.target !== list.current) {\n      show(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', clickAway);\n\n    return () => document.removeEventListener('mousedown', clickAway);\n  });\n\n  const clickHandler = (name, event) => {\n    updateTitle(name);\n    show(false);\n  };\n\n  return (\n    <ul ref={list} className={styles.TitleList}>\n      {listItems}\n    </ul>\n  );\n};\n\nTitles.propTypes = {\n  show: PropTypes.func.isRequired,\n  defaultTitles: PropTypes.array.isRequired,\n  updateTitle: PropTypes.func.isRequired,\n};\n\nexport default Titles;\n","import { connect } from 'react-redux';\n\nimport Titles from '../../../../sections/TheTavern/UserAccount/Titles/Titles';\n\nimport { updateTitle } from '../../../../actions';\n\nconst mapStateToProps = (state) => ({\n  defaultTitles: state.user.defaultTitles\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateTitle: (title) => dispatch(updateTitle(title)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Titles);\n","import dwarfFem from '../assets/images/avatar/dwarf_female_bg.png';\nimport dwarfMale from '../assets/images/avatar/Dwarf_male_bg.png';\nimport elfFem from '../assets/images/avatar/elf_female_bg.png';\nimport elfMale from '../assets/images/avatar/elf_male_bg.png';\nimport gnomeFem from '../assets/images/avatar/gnome_female_bg.png';\nimport gnomeMale from '../assets/images/avatar/gnome_male_bg.png';\nimport halfelfFem from '../assets/images/avatar/halfelf_female_bg.png';\nimport halfelfMale from '../assets/images/avatar/halfelf_male_bg.png';\nimport humanFem from '../assets/images/avatar/human_female_bg.png';\nimport humanMale from '../assets/images/avatar/human_male_bg.png';\nimport lizardmenFem from '../assets/images/avatar/lizardmen_female_bg.png';\nimport lizardmenMale from '../assets/images/avatar/lizardmen_male_bg.png';\nimport orcFem from '../assets/images/avatar/orc_female_bg.png';\nimport orcMale from '../assets/images/avatar/orc_male_bg.png';\nimport ratmenFem from '../assets/images/avatar/ratmen_female_bg.png';\nimport ratmenMale from '../assets/images/avatar/Ratmen_male_bg.png';\n// import undeadFem from '../assets/images/avatar/Undead_Female_Warrior_bg.png';\n// import undeadMale from '../assets/images/avatar/Undead_Male_Dark_Priest_bg.png';\n\nexport default [dwarfFem, dwarfMale, elfFem, elfMale, gnomeFem, gnomeMale, halfelfFem, halfelfMale, humanFem, humanMale, lizardmenFem, lizardmenMale, orcFem, orcMale, ratmenFem, ratmenMale]","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Field from '../../../containers/components/Field';\r\nimport AvatarsList from '../../../containers/TheTavern/UserAccount/AvatarsList/AvatarsList';\r\nimport Contact from './Contact/Contact';\r\nimport Modal from '../../../components/Modal/Modal';\r\nimport Titles from '../../../containers/TheTavern/UserAccount/Titles/Titles';\r\n\r\nimport styles from './UserAccount.module.scss';\r\n\r\nimport AvatarDefault from '../../../assets/images/Avatardefault.png';\r\nimport avatars from '../../../util/avatar';\r\nimport Feather from '../../../assets/images/feather.svg';\r\nimport Friends from '../../../assets/images/team.svg';\r\n\r\nimport { websiteName } from '../../../util';\r\n\r\nconst UserAccount = ({\r\n  user,\r\n  isEditing,\r\n  setIsEditing,\r\n  editUserAccount,\r\n  deleteAcount,\r\n  deleteContact,\r\n}) => {\r\n  const [isModalVisible, setModalIsVisible] = useState(false);\r\n  const [isModalAvatar, setModalAvatar] = useState(false);\r\n  const [isTitlesShowed, setIsTitlesShowed] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.title = `${websiteName} | Gestion de compte`;\r\n  }, []);\r\n\r\n  const clickHandler = (event) => {\r\n    setModalIsVisible(true);\r\n  };\r\n\r\n  const handleEdit = (event) => {\r\n    setIsEditing();\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setIsEditing();\r\n    editUserAccount();\r\n    // resetFields(\"user\");\r\n  };\r\n\r\n  return (\r\n    <section className={styles.UserAccount}>\r\n      <div className={styles.Username_Container}>\r\n        <button onClick={clickHandler} className={styles.UserAccount__DeleteBtn}>\r\n          Supprimer Compte\r\n        </button>\r\n        <div>\r\n          <h1 className={styles.Username}>{user.username}</h1>\r\n          <div className={styles.TitleContainer}>\r\n            <h2\r\n              title=\"Changer de titre\"\r\n              className={styles.TitleContainer__Title}\r\n              onClick={() => setIsTitlesShowed(true)}>\r\n              {user.title} <span>▾</span>\r\n            </h2>\r\n            {isTitlesShowed && <Titles show={setIsTitlesShowed} />}\r\n          </div>\r\n          <img\r\n            className={styles.UserAccount__Avatar}\r\n            src={user.avatar === null ? AvatarDefault : user.avatar}\r\n            alt=\"avatar de l'utilisateur\"\r\n            onClick={() => setModalAvatar(!isModalAvatar)}\r\n            title=\"Modifier l'avatar\"\r\n            style={{ cursor: 'pointer' }}\r\n          />\r\n        </div>\r\n      </div>\r\n      {isEditing ? (\r\n        <form className={styles.UserAccount__Description_Editing_Form} onSubmit={handleSubmit}>\r\n          <Field\r\n            cssClass={styles.UserAccount__Description_Editing}\r\n            reducerName=\"user\"\r\n            name=\"description\"\r\n            type=\"textarea\"\r\n            placeholder=\"Veuillez saisir votre description...\"\r\n          />\r\n          <button className={styles.UserAccount__Description_Editing_Btn}>Valider</button>\r\n          <div className={styles.UserAccount__Description__Bloc}></div>\r\n        </form>\r\n      ) : (\r\n        <div className={styles.UserAccount__Description}>\r\n          <p className={styles.UserAccount__Description_Text}>{user.description}</p>\r\n          <button className={styles.UserAccount__Description_Btn} onClick={handleEdit}>\r\n            <img\r\n              title=\"Modifier description\"\r\n              className={styles.UserAccount__Description_Btn__Feather}\r\n              src={Feather}\r\n              alt=\"plume\"\r\n            />\r\n          </button>\r\n          <div className={styles.UserAccount__Description__Bloc}></div>\r\n        </div>\r\n      )}\r\n\r\n      <h2 className={styles.ContactList_Title}>\r\n        <img className={styles.ContactList_Title_Logo} src={Friends} alt=\"friends\" />\r\n        Liste De Contacts\r\n      </h2>\r\n      <ul className={styles.ContactList}>\r\n        {user.contacts.map((contact) => (\r\n          <Contact key={contact.id} contact={contact} deleteContact={deleteContact} />\r\n        ))}\r\n      </ul>\r\n      <div className={styles.ContactList__Bloc}></div>\r\n      {isModalVisible && (\r\n        <Modal\r\n          modalCancel={() => setModalIsVisible(false)}\r\n          header=\"Suppression de Compte\"\r\n          message={`Voulez vous vraiment supprimer votre compte ?`}\r\n          modalConfirm={() => deleteAcount(user.id)}\r\n        />\r\n      )}\r\n      {isModalAvatar && (\r\n        <AvatarsList modalCancel={() => setModalAvatar(false)} avatarImages={avatars} />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nUserAccount.propTypes = {\r\n  user: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    username: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string,\r\n    description: PropTypes.string.isRequired,\r\n  }),\r\n  isEditing: PropTypes.bool,\r\n  setIsEditing: PropTypes.func.isRequired,\r\n  editUserAccount: PropTypes.func.isRequired,\r\n};\r\n\r\nUserAccount.defaultProps = {\r\n  isEditing: false,\r\n};\r\n\r\nexport default UserAccount;\r\n","import { connect } from 'react-redux';\n\nimport UserAccount from '../../../sections/TheTavern/UserAccount/UserAccount';\n\nimport { setIsEditing, editUserAccount, deleteAcount, deleteContact } from '../../../actions';\n\nconst mapStateToProps = (state) => ({\n  isEditing: state.user.isEditing,\n  user: state.user.loggedUser,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setIsEditing: () => dispatch(setIsEditing()),\n  editUserAccount: () => dispatch(editUserAccount()),\n  deleteAcount: (userId) => dispatch(deleteAcount(userId)),\n  deleteContact: (contactId) => dispatch(deleteContact(contactId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAccount);\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Welcome = ({ user, cssClass }) => (\r\n  <div className={cssClass}>\r\n    <h1>Bienvenue</h1>\r\n    <h2>{user.username} <span>{user.title}</span></h2>\r\n  </div>\r\n);\r\n\r\nWelcome.propTypes = {\r\n  user: PropTypes.shape({\r\n    username: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n  }),\r\n  cssClass: PropTypes.string,\r\n};\r\n\r\nWelcome.defaultProps = {\r\n  cssClass: '',\r\n};\r\n\r\nexport default Welcome;\r\n","import { connect } from 'react-redux';\r\n\r\nimport Welcome from '../../components/Welcome/Welcome';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user.loggedUser,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Welcome);\r\n","import React, { useState } from 'react';\nimport Moment from 'react-moment';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faPlus } from '@fortawesome/free-solid-svg-icons';\n\nimport Modal from '../../../../../components/Modal/Modal';\nimport AvatarDefault from '../../../../../assets/images/Avatardefault.png';\n\nimport styles from './Post.module.scss';\n\nconst Post = ({ post, deletePost, sendContactRequest, loggedUser }) => {\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [clickedHeart, setClickedHeart] = useState(false);\n  \n  const deleteBtnClickHandler = () => {\n    setIsDeleteModalOpen(true);\n  };\n\n  const deleteHandler = (id) => {\n    deletePost(id);\n  };\n\n  const sentRequest =\n    loggedUser.pendingRequests.sent.find((user) => user.id === post.author.id) && true;\n  const receivedRequest =\n    loggedUser.pendingRequests.received.find((user) => user.id === post.author.id) && true;\n\n  const alreadyContacts = loggedUser.contacts.find((user) => user.id === post.author.id) && true;\n\n  return (\n    <div className={styles.Container}>\n      <div className={styles.Gutter}></div>\n      <div className={styles.Post}>\n        {post.author.username === loggedUser.username ? (\n          <div className={styles.AuthorPost_gold}>{post.author.username}</div>\n        ) : (\n          <div className={styles.AuthorPost}>{post.author.username}</div>\n        )}\n        <div className={styles.AbsoluteAuthor}>\n          <img\n            className={\n              alreadyContacts ? \n                styles.AuthorAvatar__AlreadyContacts\n                : sentRequest || receivedRequest \n                  ? styles.AuthorAvatar__PendingRequest \n                : styles.AuthorAvatar}\n            src={post.author.avatar || AvatarDefault}\n            alt=\"\"\n          />\n          {post.author.username !== loggedUser.username &&\n            !sentRequest &&\n            !receivedRequest &&\n            !alreadyContacts && (\n              <div className={styles.AbsoluteAddContact}>\n                <FontAwesomeIcon\n                  icon={faPlus}\n                  className={styles.AddButton}\n                  onClick={() => sendContactRequest(post.author.id)}\n                />\n              </div>\n            )}\n        </div>\n        <pre className={styles.ContentPost}>{post.content}</pre>\n        <div\n          className={\n            post.author.username !== loggedUser.username\n              ? styles.PostFooter_start\n              : styles.PostFooter_between\n          }>\n          <div className={styles.DateContainer}>\n            <div>\n              <div>\n              <label \n                onClick={() => setClickedHeart(!clickedHeart)} \n                className={\n                  clickedHeart \n                    ? styles.DateContainer__CheckedHeart \n                    : styles.DateContainer__Heart\n                    }\n                >❤</label>\n            </div>\n              <div className={styles.Day}>\n                <Moment add={{ hours: 2 }} format=\"DD/MM/YY\">\n                  {post.createdAt}\n                </Moment>\n              </div>\n              <div className={styles.Hour}>\n                <Moment add={{ hours: 2 }} format=\"HH\">\n                  {post.createdAt}\n                </Moment>\n                <span>h</span>\n                <Moment format=\"mm\">{post.createdAt}</Moment>\n              </div>\n            </div>\n          </div>\n          {post.author.username === loggedUser.username && (\n            <FontAwesomeIcon\n              title=\"Supprimer Le Post\"\n              color=\"red\"\n              icon={faTrash}\n              className={styles.DeleteButton}\n              onClick={deleteBtnClickHandler}\n            />\n          )}\n        </div>\n      </div>\n      {isDeleteModalOpen && (\n        <Modal\n          modalCancel={() => setIsDeleteModalOpen(false)}\n          header=\"Suppression de Post\"\n          message={`Voulez vous vraiment supprimer ce post ?`}\n          modalConfirm={() => deleteHandler(post.id)}\n        />\n      )}\n    </div>\n  );\n};\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    content: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    color: PropTypes.string.isRequired,\n    createdAt: PropTypes.string.isRequired,\n    author: PropTypes.shape({\n      username: PropTypes.string.isRequired,\n    }).isRequired,\n  }),\n  deletePost: PropTypes.func.isRequired,\n  loggedUser: PropTypes.shape({\n    username: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nPost.defaultProps = {\n  image: '',\n  color: '#fff',\n};\n\nexport default Post;\n","import React from 'react';\r\nimport styles from './Posts.module.scss';\r\nimport PropTypes from 'prop-types';\r\nimport Post from './Post/Post';\r\n\r\nconst Posts = ({ posts, loggedUser, deletePost, sendContactRequest }) => {\r\n  return (\r\n    <section className={styles.Posts}>\r\n      {posts\r\n        .map((post) => (\r\n          <Post\r\n            loggedUser={loggedUser}\r\n            deletePost={deletePost}\r\n            sendContactRequest={sendContactRequest}\r\n            key={post.id}\r\n            post={post}\r\n          />\r\n        ))\r\n        .reverse()}\r\n    </section>\r\n  );\r\n};\r\n\r\nPosts.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\nexport default Posts;\r\n","import { connect } from 'react-redux';\r\nimport { deletePost, sendContactRequest } from '../../../actions';\r\n\r\nimport Posts from '../../../sections/TheTavern/Thread/Posts/Posts';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  posts: state.post.list,\r\n  loggedUser: state.user.loggedUser,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  deletePost: (id) => dispatch(deletePost(id)),\r\n  sendContactRequest: (id) => dispatch(sendContactRequest(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './InvitationHeader.module.scss';\r\n\r\nconst InvitationHeader = ({ label, number }) => {\r\n  return (\r\n    <div className={styles.InvitationHeader}>\r\n      <div>{label}</div>\r\n      {number > 0 && <span className={styles.InvitationHeader__Number}>{number}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nInvitationHeader.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  number: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default InvitationHeader;\r\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\n\nimport Modal from '../../../../components/Modal/Modal';\nimport styles from './Invitation.module.scss';\nimport { useHistory } from 'react-router-dom';\n\nimport d20 from '../../../../assets/images/d20.svg';\nimport skull from '../../../../assets/images/skull.svg';\n\nconst Invitation = ({\n  date,\n  user,\n  contact,\n  gamemaster,\n  contactRequest,\n  tavernRequest,\n  acceptContact,\n  deleteContact,\n  deleteTavern,\n  tavernId,\n}) => {\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const history = useHistory();\n\n  let invitation;\n\n  if (tavernRequest) {\n    invitation = (\n      <div className={styles.Invitation__Tavern}>\n        <div className={styles.Invitation__Tavern__Container}>\n          {date && (\n            <Moment className={styles.Invitation__Tavern__Time} add={{ hours: 2 }} format=\"HH:mm\">\n              {date}\n            </Moment>\n          )}\n          <img className={styles.Invitation__Tavern__Avatar} src={gamemaster.avatar} alt=\"avatar\" />\n          <p className={styles.Invitation__Tavern__Message__Container}>\n            <span className={styles.Invitation__Tavern__Username}>{gamemaster.username}</span>\n            <span className={styles.Invitation__Tavern__Message}>\n              Vous invite à jouer dans la Tavern !\n            </span>\n          </p>\n        </div>\n        <div className={styles.Invitation__Tavern__Buttons__Container}>\n          <button\n            className={styles.Invitation__Tavern__Button__Add}\n            onClick={(event) =>\n              clickHandler('accept', { gamemaster: gamemaster, participant: user })\n            }>\n            <img src={d20} alt=\"icone accepter\" />\n            Accepter\n          </button>\n          <button\n            className={styles.Invitation__Tavern__Button__Decline}\n            onClick={(event) =>\n              clickHandler('reject', { gamemaster: gamemaster, participant: user })\n            }>\n            <img src={skull} alt=\"icone skull\" />\n            Refuser\n          </button>\n        </div>\n      </div>\n    );\n  } else if (contactRequest) {\n    invitation = (\n      <>\n        <div className={styles.Invitation}>\n          <div className={styles.Asking}>\n            <div className={styles.Request}>\n              <div className={styles.Invitation__Container}>\n                <img className={styles.Avatar} src={contact.avatar} alt=\"avatar\" />\n                <div>\n                  <p className={styles.Name}>{contact.username}</p>\n                </div>\n              </div>\n\n              <div className={styles.Buttons}>\n                <button\n                  className={styles.Add}\n                  onClick={(event) => clickHandler('accept', { contactId: contact.id })}>\n                  Accepter\n                </button>\n                <button\n                  className={styles.Decline}\n                  onClick={(event) => clickHandler('reject', { contactId: contact.id })}>\n                  Refuser\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        {isDeleteModalOpen && (\n          <Modal\n            modalCancel={() => setIsDeleteModalOpen(false)}\n            header=\"Suppression de demande de contact\"\n            message={`Voulez vous vraiment supprimer cette demande ?`}\n            modalConfirm={() => deleteHandler(contact.id)}\n          />\n        )}\n      </>\n    );\n  }\n\n  const clickHandler = (type, obj) => {\n    if (contactRequest) {\n      if (type === 'accept') {\n        acceptContact(obj.contactId);\n      } else if (type === 'reject') {\n        setIsDeleteModalOpen(true);\n      }\n    } else if (tavernRequest) {\n      if (type === 'accept') {\n        history.push(`/tavern/${tavernId}`);\n      }\n      deleteTavern(tavernId, obj.gamemaster, obj.participant);\n    }\n  };\n\n  const deleteHandler = (id) => {\n    setIsDeleteModalOpen(false);\n    deleteContact(id);\n  };\n\n  return invitation;\n};\n\nInvitation.propTypes = {\n  username: PropTypes.string,\n  avatar: PropTypes.string,\n  acceptContact: PropTypes.func.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nInvitation.defaultProps = {\n  avatar: '',\n  username: '',\n};\n\nexport default Invitation;\n","import React from 'react';\nimport styles from './Search.module.scss';\n\nconst Search = () => (\n  <form className={styles.Form} onSubmit={(event) => event.preventDefault()}>\n    <button className={styles.Button}>Rechercher</button>\n    <input className={styles.Input} type=\"text\" placeholder=\"Utilisateur\" />\n  </form>\n);\n\nexport default Search;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Field from '../../../../containers/components/Field';\nimport InvitationHeader from '../Invitation/InvitationHeader/InvitationHeader';\nimport Invitation from '../Invitation/Invitation';\nimport Search from '../Search/Search';\n\nimport Fire from '../../../../assets/images/fire.svg';\nimport AvatarDefault from '../../../../assets/images/Avatardefault.png';\n\nimport styles from './PostForm.module.scss';\n\nconst PostForm = ({\n  post,\n  resetFields,\n  isOpen,\n  setIsOpen,\n  user,\n  acceptContact,\n  deleteContact,\n  deleteTavern,\n}) => {\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    post();\n    resetFields('post');\n    setIsOpen(!isOpen);\n  };\n\n  let numberRequests = user.pendingRequests.received.length + user.tavernRequests.length;\n  numberRequests >= 100\n    ? (numberRequests = '+99')\n    : (numberRequests = user.pendingRequests.received.length + user.tavernRequests.length);\n\n  return (\n    <div className={!isOpen ? styles.PostForm : [styles.PostForm, styles.PostForm__Open].join(' ')}>\n      <div className={styles.Drawer} onClick={() => setIsOpen(!isOpen)}>\n        {numberRequests > 0 && (\n          <span className={styles.PostForm__NumberRequests}>{numberRequests}</span>\n        )}\n        <img className={styles.SelfAvatar} src={user.avatar} alt=\"\" />\n        <span className={!isOpen ? styles.Triangle : styles.Triangle__Down}></span>\n      </div>\n      <div className={styles.PostForm__Main}>\n        <form className={styles.Form} onSubmit={handleSubmit}>\n          <div>\n            <Field\n              cssClass={styles.Input}\n              placeholder=\"Veuillez saisir un message...\"\n              type=\"textarea\"\n              reducerName=\"post\"\n              name=\"post\"\n              post\n            />\n            <button className={styles.SendButton}>\n              <img className={styles.SendButton__Fire} src={Fire} alt=\"Bouclier\" />\n              Envoyer\n            </button>\n            <img className={styles.SelfAvatarInput} src={user.avatar || AvatarDefault} alt=\"\" />\n          </div>\n          <div className={styles.Gutter}></div>\n        </form>\n        <div className={styles.PostForm__TavernInvitation}>\n          <div className={styles.PostForm__TavernInvitation__Container}>\n            {user.tavernRequests.length ? (\n              user.tavernRequests.map(({ gamemaster, tavernId, date }) => (\n                <Invitation\n                  key={gamemaster.id}\n                  gamemaster={gamemaster}\n                  user={user}\n                  date={new Date(date)}\n                  deleteTavern={deleteTavern}\n                  tavernId={tavernId}\n                  tavernRequest\n                />\n              ))\n            ) : (\n              <div className={styles.PostForm__TavernInvitation__None}>\n                <h2>Pas d'invitation pour la tavern</h2>\n              </div>\n            )}\n          </div>\n        </div>\n        <InvitationHeader\n          label=\"Demandes de contact\"\n          number={user.pendingRequests.received.length}\n        />\n        <div className={styles.PostForm__Invitation}>\n          {user.pendingRequests.received.map((contact) => (\n            <Invitation\n              key={contact.id}\n              contact={contact}\n              acceptContact={acceptContact}\n              deleteContact={deleteContact}\n              deleteTavern={deleteTavern}\n              contactRequest\n            />\n          ))}\n        </div>\n        <Search />\n      </div>\n      <footer className={styles.PostForm__Footer}>© thetavern | Tous droits réservés | 2020</footer>\n    </div>\n  );\n};\n\nPostForm.propTypes = {\n  post: PropTypes.func.isRequired,\n  resetFields: PropTypes.func.isRequired,\n};\n\nexport default PostForm;\n","import { connect } from 'react-redux';\r\n\r\nimport { post, resetFields, acceptContact, deleteContact, deleteTavern } from '../../../actions';\r\nimport PostForm from '../../../sections/TheTavern/Thread/PostForm/PostForm';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user.loggedUser,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  post: () => dispatch(post()),\r\n  resetFields: (reducer) => dispatch(resetFields(reducer)),\r\n  acceptContact: (contactId) => dispatch(acceptContact(contactId)),\r\n  deleteContact: (isContact, contactId) => dispatch(deleteContact(isContact, contactId)),\r\n  deleteTavern: (tavernId, gamemaster, participant) =>\r\n    dispatch(deleteTavern(tavernId, gamemaster, participant)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport Welcome from '../../../containers/components/Welcome';\r\nimport Posts from '../../../containers/TheTavern/Thread/Posts';\r\nimport PostForm from '../../../containers/TheTavern/Thread/PostForm';\r\n\r\nimport {websiteName}from '../../../util'\r\n\r\nimport styles from './Thread.module.scss';\r\n\r\nconst Thread = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.title= `${websiteName} | Accueil`\r\n  },[])\r\n\r\n  return (\r\n    <div className={styles.Thread}>\r\n      <Welcome cssClass={styles.Thread__Welcome} />\r\n      <div className={styles.Thread__PostsContainer}>\r\n        <Posts />\r\n        <PostForm isOpen={isOpen} setIsOpen={setIsOpen} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Thread;\r\n","import React from 'react';\nimport notFound from '../../assets/images/404.png'\n\nimport styles from './NotFound.module.scss';\n\nconst NotFound = () => {\n    return (\n  <img className={styles.NotFound} src={notFound} alt=\"Not found\"/>\n);\n}\n\nexport default NotFound;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\n// import PropTypes from 'prop-types';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Layout from '../../components/Layout/Layout';\n\nimport Tavern from '../../containers/TheTavern/Tavern/Tavern';\nimport UserAccount from '../../containers/TheTavern/UserAccount/UserAccount';\nimport Thread from './Thread/Thread';\nimport NotFound from '../../components/NotFound/NotFound';\n\nconst TheTavern = ({ wsConnect }) => {\n  useEffect(() => {\n    wsConnect();\n  }, []);\n\n  return (\n    <>\n      <Switch>\n        <Route path=\"/tavern/:id\" component={Tavern} />\n        <Layout section=\"TheTavern\">\n          <Switch>\n            <Route path=\"/compte\" component={UserAccount} />\n            <Route exact path=\"/\" component={Thread} />\n            <Route component={NotFound} />\n          </Switch>\n        </Layout>\n      </Switch>\n    </>\n  );\n};\n\n// TheTavern.propTypes = {};\n\nexport default TheTavern;\n","import { connect } from 'react-redux';\nimport { wsConnect, logout } from '../../actions';\n\nimport TheTavern from '../../sections/TheTavern/TheTavern';\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = (dispatch) => ({\n  wsConnect: () => dispatch(wsConnect()),\n  logout: () => dispatch(logout()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TheTavern);\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport ProtectedRoute from '../containers/ProtectedRoute';\r\n\r\nimport Auth from '../sections/Auth/Auth';\r\nimport TheTavern from '../containers/TheTavern/TheTavern';\r\n\r\nconst App = ({ isUserLogged, isInitialLoading, fetchPosts }) => {\r\n  useEffect(() => {\r\n    isUserLogged();\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {!isInitialLoading && (\r\n        <Switch>\r\n          <>\r\n            <Route path=\"/admin\">test</Route>\r\n            <Route path=\"/auth\" component={Auth} />\r\n            <ProtectedRoute path=\"/\" component={TheTavern} />\r\n          </>\r\n        </Switch>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { connect } from 'react-redux';\r\n\r\nimport App from '../../App/App';\r\nimport { isLoggedIn, fetchPosts } from '../../actions';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.user.isLoggedIn,\r\n  isInitialLoading: state.global.isInitialLoading,\r\n  hasTriedToAuthenticate: state.user.hasTriedToAuthenticate,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  isUserLogged: () => dispatch(isLoggedIn()),\r\n  fetchPosts: () => dispatch(fetchPosts()),\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n// import axios from 'axios';\n// import { loadErrors } from '../src/actions/error';\n// import ErrorHandler from './components/Error/errorHandler';\n\nimport './assets/scss/index.scss';\nimport store from './store';\n\nimport App from './containers/App/App';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    {/* <ErrorHandler /> */}\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root'),\n  // console.log(ErrorHandler),\n);\n\n  \n// // Response interceptor.\n// axios.interceptors.response.use(\n//   function(response) {\n//     // Do something with response data\n//     return response;\n//   },\n//   function(error) {\n//     store.dispatch(loadErrors(error));\n//     return Promise.reject(error);\n//   }\n// );"],"sourceRoot":""}